package hospitaltest;

import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.print.PageFormat;
import java.awt.print.Printable;
import java.awt.print.PrinterException;
import java.awt.print.PrinterJob;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.sql.Blob;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

public class WelcomeFrame extends javax.swing.JFrame {

    /**
     * Creates new form WelcomeFrame
     */
    public WelcomeFrame() {
        initComponents();
    }

    Connection con = null;
    int pID = -1;
    int empCode = -1;

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup_gender = new javax.swing.ButtonGroup();
        buttonGroup_edit_gender = new javax.swing.ButtonGroup();
        popupMenu_tablePatients = new javax.swing.JPopupMenu();
        mi_patient_edit = new javax.swing.JMenuItem();
        mi_patient_delete = new javax.swing.JMenuItem();
        popupMenu_tableEmployees = new javax.swing.JPopupMenu();
        mi_emp_edit = new javax.swing.JMenuItem();
        mi_emp_delete = new javax.swing.JMenuItem();
        editFrame_patients = new javax.swing.JFrame();
        label_edit_name = new javax.swing.JLabel();
        label_edit_age = new javax.swing.JLabel();
        label_edit_mobile = new javax.swing.JLabel();
        label_edit_disease = new javax.swing.JLabel();
        label_edit_address = new javax.swing.JLabel();
        label_edit_date = new javax.swing.JLabel();
        label_edit_gender = new javax.swing.JLabel();
        label_edit_bloodGroup = new javax.swing.JLabel();
        label_edit_maritalStatus = new javax.swing.JLabel();
        cb_edit_maritalStatus = new javax.swing.JComboBox<>();
        cb_edit_bloodGroup = new javax.swing.JComboBox<>();
        tf_edit_other_bloodGroup = new javax.swing.JTextField();
        tf_edit_other_gender = new javax.swing.JTextField();
        rb_edit_other = new javax.swing.JRadioButton();
        rb_edit_female = new javax.swing.JRadioButton();
        rb_edit_male = new javax.swing.JRadioButton();
        tf_edit_date = new javax.swing.JTextField();
        tf_edit_address = new javax.swing.JTextField();
        tf_edit_disease = new javax.swing.JTextField();
        tf_edit_mobile = new javax.swing.JTextField();
        tf_edit_age = new javax.swing.JTextField();
        tf_edit_name = new javax.swing.JTextField();
        b_updatePatient = new javax.swing.JButton();
        b_cancelPatient = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        editFrame_employees = new javax.swing.JFrame();
        label_edit_empForm_name = new javax.swing.JLabel();
        label_edit_empForm_mobile = new javax.swing.JLabel();
        label_edit_empForm_designation = new javax.swing.JLabel();
        label_edit_empForm_empID = new javax.swing.JLabel();
        label_edit_empForm_address = new javax.swing.JLabel();
        label_edit_empForm_noOfLeaves = new javax.swing.JLabel();
        label_edit_empForm_salary = new javax.swing.JLabel();
        label_edit_empForm_totalAttendance = new javax.swing.JLabel();
        label_edit_empForm_resumeFile = new javax.swing.JLabel();
        tf_edit_empForm_name = new javax.swing.JTextField();
        tf_edit_empForm_mobile = new javax.swing.JTextField();
        tf_edit_empForm_designation = new javax.swing.JTextField();
        tf_edit_empForm_empID = new javax.swing.JTextField();
        tf_edit_empForm_address = new javax.swing.JTextField();
        tf_edit_empForm_noOfLeaves = new javax.swing.JTextField();
        tf_edit_empForm_salary = new javax.swing.JTextField();
        tf_edit_empForm_totalAttendance = new javax.swing.JTextField();
        b_edit_empForm_resumeSelect = new javax.swing.JButton();
        label_edit_empForm_filePath = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        b_updatePatient1 = new javax.swing.JButton();
        b_cancelPatient1 = new javax.swing.JButton();
        panel_header = new javax.swing.JPanel();
        label_title = new javax.swing.JLabel();
        panel_mainMenu = new javax.swing.JPanel();
        b_information = new javax.swing.JButton();
        b_admin = new javax.swing.JButton();
        b_employee = new javax.swing.JButton();
        b_newPatient = new javax.swing.JButton();
        b_oldPatient = new javax.swing.JButton();
        panel_subMenu = new javax.swing.JPanel();
        panel_subMenu_blank = new javax.swing.JPanel();
        panel_subMenu_admin = new javax.swing.JPanel();
        b_subMenu_admin_addEmployee = new javax.swing.JButton();
        b_subMenu_admin_addPatient = new javax.swing.JButton();
        b_subMenu_admin_viewPatientsList = new javax.swing.JButton();
        b_subMenu_admin_viewEmployeeList = new javax.swing.JButton();
        b_subMenu_admin_logout = new javax.swing.JButton();
        panel_subMenu_employee = new javax.swing.JPanel();
        b_subMenu_employee_addPatient = new javax.swing.JButton();
        b_subMenu_employee_viewPatientsList = new javax.swing.JButton();
        b_subMenu_employee_logout = new javax.swing.JButton();
        panel_parent = new javax.swing.JPanel();
        panel_information = new javax.swing.JPanel();
        label_info_bannerImage = new javax.swing.JLabel();
        label_info_addressTitle = new javax.swing.JLabel();
        label_info_address = new javax.swing.JLabel();
        label_info_phoneTitle = new javax.swing.JLabel();
        label_info_phone = new javax.swing.JLabel();
        label_info_faxTitle = new javax.swing.JLabel();
        label_info_fax = new javax.swing.JLabel();
        label_info_faxTitle1 = new javax.swing.JLabel();
        label_info_fax1 = new javax.swing.JLabel();
        label_info_faxTitle2 = new javax.swing.JLabel();
        label_info_fax2 = new javax.swing.JLabel();
        label_info_faxTitle3 = new javax.swing.JLabel();
        label_info_faxTitle4 = new javax.swing.JLabel();
        panel_admin = new javax.swing.JPanel();
        label_admin_username = new javax.swing.JLabel();
        label_admin_password = new javax.swing.JLabel();
        tf_admin_username = new javax.swing.JTextField();
        tf_admin_password = new javax.swing.JPasswordField();
        b_admin_login = new javax.swing.JButton();
        label_admin_adminLogin = new javax.swing.JLabel();
        b_admin_tempLogin = new javax.swing.JButton();
        panel_employee = new javax.swing.JPanel();
        label_emp_empid = new javax.swing.JLabel();
        label_emp_mobile = new javax.swing.JLabel();
        tf_emp_empid = new javax.swing.JTextField();
        b_emp_login = new javax.swing.JButton();
        label_emp_empLogin = new javax.swing.JLabel();
        tf_emp_mobile = new javax.swing.JTextField();
        b_emp_tempLogin = new javax.swing.JButton();
        panel_newPatient = new javax.swing.JPanel();
        label_name = new javax.swing.JLabel();
        label_age = new javax.swing.JLabel();
        label_mobile = new javax.swing.JLabel();
        label_disease = new javax.swing.JLabel();
        label_address = new javax.swing.JLabel();
        label_date = new javax.swing.JLabel();
        label_gender = new javax.swing.JLabel();
        label_bloodGroup = new javax.swing.JLabel();
        label_maritalStatus = new javax.swing.JLabel();
        tf_name = new javax.swing.JTextField();
        tf_age = new javax.swing.JTextField();
        tf_mobile = new javax.swing.JTextField();
        tf_disease = new javax.swing.JTextField();
        tf_address = new javax.swing.JTextField();
        tf_date = new javax.swing.JTextField();
        rb_male = new javax.swing.JRadioButton();
        rb_female = new javax.swing.JRadioButton();
        rb_other = new javax.swing.JRadioButton();
        cb_bloodGroup = new javax.swing.JComboBox<>();
        cb_maritalStatus = new javax.swing.JComboBox<>();
        b_register = new javax.swing.JButton();
        b_reset = new javax.swing.JButton();
        tf_other_gender = new javax.swing.JTextField();
        tf_other_bloodGroup = new javax.swing.JTextField();
        panel_oldPatient = new javax.swing.JPanel();
        tf_op_name = new javax.swing.JTextField();
        label_op_name = new javax.swing.JLabel();
        tf_op_mobile = new javax.swing.JTextField();
        label_op_mobile = new javax.swing.JLabel();
        b_op_search = new javax.swing.JButton();
        label_op_patientLogin = new javax.swing.JLabel();
        panel_empForm = new javax.swing.JPanel();
        label_empForm_name = new javax.swing.JLabel();
        label_empForm_mobile = new javax.swing.JLabel();
        label_empForm_designation = new javax.swing.JLabel();
        label_empForm_empID = new javax.swing.JLabel();
        label_empForm_address = new javax.swing.JLabel();
        label_empForm_noOfLeaves = new javax.swing.JLabel();
        label_empForm_salary = new javax.swing.JLabel();
        label_empForm_totalAttendance = new javax.swing.JLabel();
        label_empForm_resumeFile = new javax.swing.JLabel();
        tf_empForm_name = new javax.swing.JTextField();
        tf_empForm_mobile = new javax.swing.JTextField();
        tf_empForm_designation = new javax.swing.JTextField();
        tf_empForm_empID = new javax.swing.JTextField();
        tf_empForm_address = new javax.swing.JTextField();
        tf_empForm_noOfLeaves = new javax.swing.JTextField();
        tf_empForm_salary = new javax.swing.JTextField();
        tf_empForm_totalAttendance = new javax.swing.JTextField();
        b_empForm_resumeSelect = new javax.swing.JButton();
        b_empForm_createEmp = new javax.swing.JButton();
        label_empForm_filePath = new javax.swing.JLabel();
        panel_patientInfo = new javax.swing.JPanel();
        label_nameTag_userInfo = new javax.swing.JLabel();
        label_ageTag_userInfo = new javax.swing.JLabel();
        label_mobileTag_userInfo = new javax.swing.JLabel();
        label_diseaseTag_userInfo = new javax.swing.JLabel();
        label_addressTag_userInfo = new javax.swing.JLabel();
        label_dateTag_userInfo = new javax.swing.JLabel();
        label_genderTag_userInfo = new javax.swing.JLabel();
        label_bloodGroupTag_userInfo = new javax.swing.JLabel();
        label_maritalStatusTag_userInfo = new javax.swing.JLabel();
        label_nameData_userInfo = new javax.swing.JLabel();
        label_ageData_userInfo = new javax.swing.JLabel();
        label_mobileData_userInfo = new javax.swing.JLabel();
        label_diseaseData_userInfo = new javax.swing.JLabel();
        label_addressData_userInfo = new javax.swing.JLabel();
        label_dateData_userInfo = new javax.swing.JLabel();
        label_genderData_userInfo = new javax.swing.JLabel();
        label_bloodGroupData_userInfo = new javax.swing.JLabel();
        label_maritalStatusData_userInfo = new javax.swing.JLabel();
        b_back = new javax.swing.JButton();
        b_print = new javax.swing.JButton();
        panel_employeeList = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        table_employeeTable = new javax.swing.JTable();
        label_employeeList = new javax.swing.JLabel();
        panel_patientsList = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        table_patientsTable = new javax.swing.JTable();
        label_patientsList = new javax.swing.JLabel();

        mi_patient_edit.setText("Edit");
        mi_patient_edit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mi_patient_editActionPerformed(evt);
            }
        });
        popupMenu_tablePatients.add(mi_patient_edit);

        mi_patient_delete.setText("Delete");
        mi_patient_delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mi_patient_deleteActionPerformed(evt);
            }
        });
        popupMenu_tablePatients.add(mi_patient_delete);

        mi_emp_edit.setText("Edit");
        mi_emp_edit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mi_emp_editActionPerformed(evt);
            }
        });
        popupMenu_tableEmployees.add(mi_emp_edit);

        mi_emp_delete.setText("Delete");
        mi_emp_delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mi_emp_deleteActionPerformed(evt);
            }
        });
        popupMenu_tableEmployees.add(mi_emp_delete);

        editFrame_patients.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        editFrame_patients.setLocation(new java.awt.Point(0, 0));
        editFrame_patients.setResizable(false);
        editFrame_patients.setSize(new java.awt.Dimension(750, 550));

        label_edit_name.setText("Name");

        label_edit_age.setText("Age");

        label_edit_mobile.setText("Mobile");

        label_edit_disease.setText("Disease");

        label_edit_address.setText("Address");

        label_edit_date.setText("Date (yyyy-mm-dd)");

        label_edit_gender.setText("Gender");

        label_edit_bloodGroup.setText("Blood Group");

        label_edit_maritalStatus.setText("Marital Status");

        cb_edit_maritalStatus.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select", "Single", "Married", "Divorced", "Widowed" }));

        cb_edit_bloodGroup.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select", "O+", "O-", "A+", "A-", "B+", "B-", "AB+", "AB-", "Other" }));
        cb_edit_bloodGroup.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cb_edit_bloodGroupActionPerformed(evt);
            }
        });

        tf_edit_other_gender.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tf_edit_other_genderMouseClicked(evt);
            }
        });

        buttonGroup_edit_gender.add(rb_edit_other);
        rb_edit_other.setText("Other");
        rb_edit_other.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rb_edit_otherActionPerformed(evt);
            }
        });

        buttonGroup_edit_gender.add(rb_edit_female);
        rb_edit_female.setText("Female");
        rb_edit_female.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rb_edit_femaleActionPerformed(evt);
            }
        });

        buttonGroup_edit_gender.add(rb_edit_male);
        rb_edit_male.setText("Male");
        rb_edit_male.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rb_edit_maleActionPerformed(evt);
            }
        });

        tf_edit_date.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tf_edit_dateActionPerformed(evt);
            }
        });

        tf_edit_age.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tf_edit_ageActionPerformed(evt);
            }
        });

        tf_edit_name.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tf_edit_nameActionPerformed(evt);
            }
        });

        b_updatePatient.setText("Update");
        b_updatePatient.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_updatePatientActionPerformed(evt);
            }
        });

        b_cancelPatient.setText("Cancel");
        b_cancelPatient.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_cancelPatientActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel1.setText("Update Values");

        javax.swing.GroupLayout editFrame_patientsLayout = new javax.swing.GroupLayout(editFrame_patients.getContentPane());
        editFrame_patients.getContentPane().setLayout(editFrame_patientsLayout);
        editFrame_patientsLayout.setHorizontalGroup(
            editFrame_patientsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(editFrame_patientsLayout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(editFrame_patientsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(editFrame_patientsLayout.createSequentialGroup()
                        .addComponent(b_updatePatient, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(72, 72, 72)
                        .addComponent(b_cancelPatient, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(editFrame_patientsLayout.createSequentialGroup()
                        .addGroup(editFrame_patientsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(label_edit_name)
                            .addComponent(label_edit_age)
                            .addComponent(label_edit_mobile)
                            .addComponent(label_edit_disease)
                            .addComponent(label_edit_address)
                            .addComponent(label_edit_date)
                            .addComponent(label_edit_gender)
                            .addComponent(label_edit_bloodGroup)
                            .addComponent(label_edit_maritalStatus))
                        .addGap(162, 162, 162)
                        .addGroup(editFrame_patientsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(editFrame_patientsLayout.createSequentialGroup()
                                .addGroup(editFrame_patientsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, editFrame_patientsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(cb_edit_maritalStatus, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(cb_edit_bloodGroup, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(tf_edit_date, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGroup(editFrame_patientsLayout.createSequentialGroup()
                                            .addComponent(rb_edit_male)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                            .addComponent(rb_edit_female)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                            .addComponent(rb_edit_other)))
                                    .addComponent(tf_edit_address, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(tf_edit_disease, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(tf_edit_mobile, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(tf_edit_age, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(tf_edit_name, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(editFrame_patientsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(tf_edit_other_gender, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(tf_edit_other_bloodGroup, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, editFrame_patientsLayout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(260, 260, 260)))))
                .addGap(0, 40, Short.MAX_VALUE))
        );
        editFrame_patientsLayout.setVerticalGroup(
            editFrame_patientsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, editFrame_patientsLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 53, Short.MAX_VALUE)
                .addGroup(editFrame_patientsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tf_edit_name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(label_edit_name))
                .addGap(18, 18, 18)
                .addGroup(editFrame_patientsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tf_edit_age, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(label_edit_age))
                .addGap(18, 18, 18)
                .addGroup(editFrame_patientsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tf_edit_mobile, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(label_edit_mobile))
                .addGap(18, 18, 18)
                .addGroup(editFrame_patientsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tf_edit_disease, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(label_edit_disease))
                .addGap(18, 18, 18)
                .addGroup(editFrame_patientsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tf_edit_address, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(label_edit_address))
                .addGap(18, 18, 18)
                .addGroup(editFrame_patientsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tf_edit_date, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(label_edit_date))
                .addGap(18, 18, 18)
                .addGroup(editFrame_patientsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rb_edit_male)
                    .addComponent(rb_edit_female)
                    .addComponent(rb_edit_other)
                    .addComponent(tf_edit_other_gender, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(label_edit_gender))
                .addGap(18, 18, 18)
                .addGroup(editFrame_patientsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cb_edit_bloodGroup, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tf_edit_other_bloodGroup, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(label_edit_bloodGroup))
                .addGap(18, 18, 18)
                .addGroup(editFrame_patientsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cb_edit_maritalStatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(label_edit_maritalStatus))
                .addGap(36, 36, 36)
                .addGroup(editFrame_patientsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(b_updatePatient)
                    .addComponent(b_cancelPatient))
                .addGap(36, 36, 36))
        );

        tf_other_bloodGroup.setVisible(false);
        tf_other_gender.setVisible(false);

        editFrame_employees.setLocation(new java.awt.Point(0, 0));
        editFrame_employees.setResizable(false);
        editFrame_employees.setSize(new java.awt.Dimension(750, 550));

        label_edit_empForm_name.setText("Name");

        label_edit_empForm_mobile.setText("Mobile");

        label_edit_empForm_designation.setText("Designation");

        label_edit_empForm_empID.setText("Emp ID");

        label_edit_empForm_address.setText("Address");

        label_edit_empForm_noOfLeaves.setText("No. of Leaves");

        label_edit_empForm_salary.setText("Salary");

        label_edit_empForm_totalAttendance.setText("Total Attendance");

        label_edit_empForm_resumeFile.setText("Resume File");

        tf_edit_empForm_name.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tf_edit_empForm_nameActionPerformed(evt);
            }
        });

        tf_edit_empForm_mobile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tf_edit_empForm_mobileActionPerformed(evt);
            }
        });

        tf_edit_empForm_designation.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tf_edit_empForm_designationActionPerformed(evt);
            }
        });

        tf_edit_empForm_empID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tf_edit_empForm_empIDActionPerformed(evt);
            }
        });

        tf_edit_empForm_address.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tf_edit_empForm_addressActionPerformed(evt);
            }
        });

        tf_edit_empForm_noOfLeaves.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tf_edit_empForm_noOfLeavesActionPerformed(evt);
            }
        });

        tf_edit_empForm_salary.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tf_edit_empForm_salaryActionPerformed(evt);
            }
        });

        tf_edit_empForm_totalAttendance.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tf_edit_empForm_totalAttendanceActionPerformed(evt);
            }
        });

        b_edit_empForm_resumeSelect.setText("Select...");
        b_edit_empForm_resumeSelect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_edit_empForm_resumeSelectActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel2.setText("Update Values");

        b_updatePatient1.setText("Update");
        b_updatePatient1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_updatePatient1ActionPerformed(evt);
            }
        });

        b_cancelPatient1.setText("Cancel");
        b_cancelPatient1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_cancelPatient1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout editFrame_employeesLayout = new javax.swing.GroupLayout(editFrame_employees.getContentPane());
        editFrame_employees.getContentPane().setLayout(editFrame_employeesLayout);
        editFrame_employeesLayout.setHorizontalGroup(
            editFrame_employeesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(editFrame_employeesLayout.createSequentialGroup()
                .addContainerGap(107, Short.MAX_VALUE)
                .addGroup(editFrame_employeesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, editFrame_employeesLayout.createSequentialGroup()
                        .addGroup(editFrame_employeesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(editFrame_employeesLayout.createSequentialGroup()
                                .addGroup(editFrame_employeesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(label_edit_empForm_name, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(label_edit_empForm_mobile, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(label_edit_empForm_designation, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(label_edit_empForm_empID, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(label_edit_empForm_address, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(label_edit_empForm_noOfLeaves, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(label_edit_empForm_salary, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(label_edit_empForm_totalAttendance, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(label_edit_empForm_resumeFile, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(123, 123, 123)
                                .addGroup(editFrame_employeesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(editFrame_employeesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(tf_edit_empForm_name, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(tf_edit_empForm_mobile, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(tf_edit_empForm_designation, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(tf_edit_empForm_empID, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(tf_edit_empForm_address, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(tf_edit_empForm_noOfLeaves, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(tf_edit_empForm_salary, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(tf_edit_empForm_totalAttendance, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(b_edit_empForm_resumeSelect, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(editFrame_employeesLayout.createSequentialGroup()
                                .addComponent(b_updatePatient1, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(72, 72, 72)
                                .addComponent(b_cancelPatient1, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(149, 149, 149))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, editFrame_employeesLayout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(305, 305, 305))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, editFrame_employeesLayout.createSequentialGroup()
                        .addComponent(label_edit_empForm_filePath, javax.swing.GroupLayout.PREFERRED_SIZE, 337, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
        );
        editFrame_employeesLayout.setVerticalGroup(
            editFrame_employeesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, editFrame_employeesLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 64, Short.MAX_VALUE)
                .addGroup(editFrame_employeesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(label_edit_empForm_name)
                    .addComponent(tf_edit_empForm_name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(editFrame_employeesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(label_edit_empForm_mobile)
                    .addComponent(tf_edit_empForm_mobile, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(editFrame_employeesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(label_edit_empForm_designation)
                    .addComponent(tf_edit_empForm_designation, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(editFrame_employeesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(label_edit_empForm_empID)
                    .addComponent(tf_edit_empForm_empID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(editFrame_employeesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(label_edit_empForm_address)
                    .addComponent(tf_edit_empForm_address, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(editFrame_employeesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(label_edit_empForm_noOfLeaves)
                    .addComponent(tf_edit_empForm_noOfLeaves, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(editFrame_employeesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(label_edit_empForm_salary)
                    .addComponent(tf_edit_empForm_salary, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(editFrame_employeesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(label_edit_empForm_totalAttendance)
                    .addComponent(tf_edit_empForm_totalAttendance, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(editFrame_employeesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(label_edit_empForm_resumeFile)
                    .addComponent(b_edit_empForm_resumeSelect))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(label_edit_empForm_filePath, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20)
                .addGroup(editFrame_employeesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(b_updatePatient1)
                    .addComponent(b_cancelPatient1))
                .addContainerGap())
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        panel_header.setBackground(java.awt.Color.lightGray);

        label_title.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        label_title.setForeground(new java.awt.Color(255, 255, 255));
        label_title.setText("Welcome to Jindal Institute of Medical Sciences");

        javax.swing.GroupLayout panel_headerLayout = new javax.swing.GroupLayout(panel_header);
        panel_header.setLayout(panel_headerLayout);
        panel_headerLayout.setHorizontalGroup(
            panel_headerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panel_headerLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(label_title)
                .addGap(557, 557, 557))
        );
        panel_headerLayout.setVerticalGroup(
            panel_headerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_headerLayout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addComponent(label_title)
                .addContainerGap(38, Short.MAX_VALUE))
        );

        b_information.setText("Information");
        b_information.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_informationActionPerformed(evt);
            }
        });

        b_admin.setText("Admin");
        b_admin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_adminActionPerformed(evt);
            }
        });

        b_employee.setText("Employee");
        b_employee.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_employeeActionPerformed(evt);
            }
        });

        b_newPatient.setText("New Patient");
        b_newPatient.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_newPatientActionPerformed(evt);
            }
        });

        b_oldPatient.setText("Old Patient");
        b_oldPatient.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_oldPatientActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panel_mainMenuLayout = new javax.swing.GroupLayout(panel_mainMenu);
        panel_mainMenu.setLayout(panel_mainMenuLayout);
        panel_mainMenuLayout.setHorizontalGroup(
            panel_mainMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_mainMenuLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panel_mainMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(b_newPatient, javax.swing.GroupLayout.DEFAULT_SIZE, 176, Short.MAX_VALUE)
                    .addComponent(b_employee, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(b_admin, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(b_information, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(b_oldPatient, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        panel_mainMenuLayout.setVerticalGroup(
            panel_mainMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_mainMenuLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(b_information, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(b_admin, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(b_employee, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(b_newPatient, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(b_oldPatient, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        panel_subMenu.setLayout(new java.awt.CardLayout());

        javax.swing.GroupLayout panel_subMenu_blankLayout = new javax.swing.GroupLayout(panel_subMenu_blank);
        panel_subMenu_blank.setLayout(panel_subMenu_blankLayout);
        panel_subMenu_blankLayout.setHorizontalGroup(
            panel_subMenu_blankLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 200, Short.MAX_VALUE)
        );
        panel_subMenu_blankLayout.setVerticalGroup(
            panel_subMenu_blankLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 958, Short.MAX_VALUE)
        );

        panel_subMenu.add(panel_subMenu_blank, "card4");

        b_subMenu_admin_addEmployee.setText("Add Employee");
        b_subMenu_admin_addEmployee.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_subMenu_admin_addEmployeeActionPerformed(evt);
            }
        });

        b_subMenu_admin_addPatient.setText("Add Patient");
        b_subMenu_admin_addPatient.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_subMenu_admin_addPatientActionPerformed(evt);
            }
        });

        b_subMenu_admin_viewPatientsList.setText("View Patients List");
        b_subMenu_admin_viewPatientsList.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_subMenu_admin_viewPatientsListActionPerformed(evt);
            }
        });

        b_subMenu_admin_viewEmployeeList.setText("View Employee List");
        b_subMenu_admin_viewEmployeeList.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_subMenu_admin_viewEmployeeListActionPerformed(evt);
            }
        });

        b_subMenu_admin_logout.setText("Logout");
        b_subMenu_admin_logout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_subMenu_admin_logoutActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panel_subMenu_adminLayout = new javax.swing.GroupLayout(panel_subMenu_admin);
        panel_subMenu_admin.setLayout(panel_subMenu_adminLayout);
        panel_subMenu_adminLayout.setHorizontalGroup(
            panel_subMenu_adminLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_subMenu_adminLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panel_subMenu_adminLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(b_subMenu_admin_logout, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(b_subMenu_admin_addPatient, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(b_subMenu_admin_addEmployee, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 176, Short.MAX_VALUE)
                    .addComponent(b_subMenu_admin_viewPatientsList, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(b_subMenu_admin_viewEmployeeList, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        panel_subMenu_adminLayout.setVerticalGroup(
            panel_subMenu_adminLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_subMenu_adminLayout.createSequentialGroup()
                .addGap(71, 71, 71)
                .addComponent(b_subMenu_admin_addEmployee, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(b_subMenu_admin_addPatient, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(b_subMenu_admin_viewEmployeeList, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(b_subMenu_admin_viewPatientsList, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(b_subMenu_admin_logout, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(615, Short.MAX_VALUE))
        );

        panel_subMenu.add(panel_subMenu_admin, "card2");

        b_subMenu_employee_addPatient.setText("Add Patient");
        b_subMenu_employee_addPatient.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_subMenu_employee_addPatientActionPerformed(evt);
            }
        });

        b_subMenu_employee_viewPatientsList.setText("View Patients List");
        b_subMenu_employee_viewPatientsList.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_subMenu_employee_viewPatientsListActionPerformed(evt);
            }
        });

        b_subMenu_employee_logout.setText("Logout");
        b_subMenu_employee_logout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_subMenu_employee_logoutActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panel_subMenu_employeeLayout = new javax.swing.GroupLayout(panel_subMenu_employee);
        panel_subMenu_employee.setLayout(panel_subMenu_employeeLayout);
        panel_subMenu_employeeLayout.setHorizontalGroup(
            panel_subMenu_employeeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_subMenu_employeeLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panel_subMenu_employeeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(b_subMenu_employee_logout, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(b_subMenu_employee_addPatient, javax.swing.GroupLayout.DEFAULT_SIZE, 176, Short.MAX_VALUE)
                    .addComponent(b_subMenu_employee_viewPatientsList, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        panel_subMenu_employeeLayout.setVerticalGroup(
            panel_subMenu_employeeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_subMenu_employeeLayout.createSequentialGroup()
                .addGap(129, 129, 129)
                .addComponent(b_subMenu_employee_addPatient, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(b_subMenu_employee_viewPatientsList, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(b_subMenu_employee_logout, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(673, Short.MAX_VALUE))
        );

        panel_subMenu.add(panel_subMenu_employee, "card3");

        panel_parent.setLayout(new java.awt.CardLayout());

        label_info_bannerImage.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/services.png"))); // NOI18N

        label_info_addressTitle.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        label_info_addressTitle.setText("Address :");

        label_info_address.setText("Jindal Institute of Medical Sciences Model Town, Hisar – 125005 Haryana INDIA");

        label_info_phoneTitle.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        label_info_phoneTitle.setText("Phone :");

        label_info_phone.setText("01662–221169, 220169, 220511");

        label_info_faxTitle.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        label_info_faxTitle.setText("Fax :");

        label_info_fax.setText("01662–221700");

        label_info_faxTitle1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        label_info_faxTitle1.setText("Mobile :");

        label_info_fax1.setText("9896539128, 9896471111");

        label_info_faxTitle2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        label_info_faxTitle2.setText("Email :");

        label_info_fax2.setText("info@ncjims.org");

        label_info_faxTitle3.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        label_info_faxTitle3.setForeground(new java.awt.Color(255, 0, 51));
        label_info_faxTitle3.setText("24 Hrs Emergency Helpline:");

        label_info_faxTitle4.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        label_info_faxTitle4.setText("9896539132");

        javax.swing.GroupLayout panel_informationLayout = new javax.swing.GroupLayout(panel_information);
        panel_information.setLayout(panel_informationLayout);
        panel_informationLayout.setHorizontalGroup(
            panel_informationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_informationLayout.createSequentialGroup()
                .addGap(254, 254, 254)
                .addGroup(panel_informationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panel_informationLayout.createSequentialGroup()
                        .addComponent(label_info_faxTitle3)
                        .addGap(18, 18, 18)
                        .addComponent(label_info_faxTitle4))
                    .addComponent(label_info_bannerImage)
                    .addGroup(panel_informationLayout.createSequentialGroup()
                        .addGroup(panel_informationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(label_info_addressTitle)
                            .addComponent(label_info_phoneTitle, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(label_info_faxTitle, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(label_info_faxTitle1, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(label_info_faxTitle2, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addGap(18, 18, 18)
                        .addGroup(panel_informationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(label_info_phone)
                            .addComponent(label_info_address)
                            .addComponent(label_info_fax)
                            .addComponent(label_info_fax1)
                            .addComponent(label_info_fax2))))
                .addContainerGap(606, Short.MAX_VALUE))
        );
        panel_informationLayout.setVerticalGroup(
            panel_informationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_informationLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(label_info_bannerImage)
                .addGap(35, 35, 35)
                .addGroup(panel_informationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(label_info_addressTitle)
                    .addComponent(label_info_address))
                .addGap(30, 30, 30)
                .addGroup(panel_informationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(label_info_phone)
                    .addComponent(label_info_phoneTitle))
                .addGap(25, 25, 25)
                .addGroup(panel_informationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(label_info_fax)
                    .addComponent(label_info_faxTitle))
                .addGap(20, 20, 20)
                .addGroup(panel_informationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(label_info_fax1)
                    .addComponent(label_info_faxTitle1))
                .addGap(15, 15, 15)
                .addGroup(panel_informationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(label_info_fax2)
                    .addComponent(label_info_faxTitle2))
                .addGap(92, 92, 92)
                .addGroup(panel_informationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(label_info_faxTitle3)
                    .addComponent(label_info_faxTitle4))
                .addContainerGap(347, Short.MAX_VALUE))
        );

        panel_parent.add(panel_information, "card2");

        label_admin_username.setText("Username");

        label_admin_password.setText("Password");

        b_admin_login.setText("Login");
        b_admin_login.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_admin_loginActionPerformed(evt);
            }
        });

        label_admin_adminLogin.setText("Admin Login");

        b_admin_tempLogin.setText("Temp Login");
        b_admin_tempLogin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_admin_tempLoginActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panel_adminLayout = new javax.swing.GroupLayout(panel_admin);
        panel_admin.setLayout(panel_adminLayout);
        panel_adminLayout.setHorizontalGroup(
            panel_adminLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_adminLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panel_adminLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panel_adminLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panel_adminLayout.createSequentialGroup()
                            .addComponent(label_admin_username)
                            .addGap(18, 18, 18)
                            .addComponent(tf_admin_username, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panel_adminLayout.createSequentialGroup()
                            .addComponent(label_admin_password)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(panel_adminLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(b_admin_login, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(tf_admin_password, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(b_admin_tempLogin, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(panel_adminLayout.createSequentialGroup()
                        .addGap(136, 136, 136)
                        .addComponent(label_admin_adminLogin)))
                .addContainerGap(1213, Short.MAX_VALUE))
        );
        panel_adminLayout.setVerticalGroup(
            panel_adminLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_adminLayout.createSequentialGroup()
                .addGap(73, 73, 73)
                .addComponent(label_admin_adminLogin)
                .addGap(18, 18, 18)
                .addGroup(panel_adminLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tf_admin_username, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(label_admin_username))
                .addGap(18, 18, 18)
                .addGroup(panel_adminLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(label_admin_password)
                    .addComponent(tf_admin_password, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(b_admin_login)
                .addGap(18, 18, 18)
                .addComponent(b_admin_tempLogin)
                .addContainerGap(703, Short.MAX_VALUE))
        );

        panel_parent.add(panel_admin, "card6");

        label_emp_empid.setText("EmpID");

        label_emp_mobile.setText("Mobile");

        b_emp_login.setText("Login");
        b_emp_login.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_emp_loginActionPerformed(evt);
            }
        });

        label_emp_empLogin.setText("Employee Login");

        b_emp_tempLogin.setText("Temp Login");
        b_emp_tempLogin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_emp_tempLoginActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panel_employeeLayout = new javax.swing.GroupLayout(panel_employee);
        panel_employee.setLayout(panel_employeeLayout);
        panel_employeeLayout.setHorizontalGroup(
            panel_employeeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_employeeLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panel_employeeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panel_employeeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panel_employeeLayout.createSequentialGroup()
                            .addComponent(label_emp_empid, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(tf_emp_empid, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(panel_employeeLayout.createSequentialGroup()
                            .addComponent(label_emp_mobile, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(tf_emp_mobile, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(b_emp_login, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(b_emp_tempLogin, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(panel_employeeLayout.createSequentialGroup()
                        .addGap(125, 125, 125)
                        .addComponent(label_emp_empLogin)))
                .addContainerGap(1213, Short.MAX_VALUE))
        );
        panel_employeeLayout.setVerticalGroup(
            panel_employeeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_employeeLayout.createSequentialGroup()
                .addGap(73, 73, 73)
                .addComponent(label_emp_empLogin)
                .addGap(18, 18, 18)
                .addGroup(panel_employeeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tf_emp_empid, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(label_emp_empid))
                .addGap(18, 18, 18)
                .addGroup(panel_employeeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tf_emp_mobile, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(label_emp_mobile))
                .addGap(18, 18, 18)
                .addComponent(b_emp_login)
                .addGap(18, 18, 18)
                .addComponent(b_emp_tempLogin)
                .addContainerGap(703, Short.MAX_VALUE))
        );

        panel_parent.add(panel_employee, "card6");

        label_name.setText("Name");

        label_age.setText("Age");

        label_mobile.setText("Mobile");

        label_disease.setText("Disease");

        label_address.setText("Address");

        label_date.setText("Date (yyyy-mm-dd)");

        label_gender.setText("Gender");

        label_bloodGroup.setText("Blood Group");

        label_maritalStatus.setText("Marital Status");

        tf_name.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tf_nameActionPerformed(evt);
            }
        });

        tf_age.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tf_ageActionPerformed(evt);
            }
        });

        tf_date.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tf_dateActionPerformed(evt);
            }
        });

        buttonGroup_gender.add(rb_male);
        rb_male.setText("Male");
        rb_male.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rb_maleActionPerformed(evt);
            }
        });

        buttonGroup_gender.add(rb_female);
        rb_female.setText("Female");
        rb_female.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rb_femaleActionPerformed(evt);
            }
        });

        buttonGroup_gender.add(rb_other);
        rb_other.setText("Other");
        rb_other.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rb_otherActionPerformed(evt);
            }
        });

        cb_bloodGroup.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select", "O+", "O-", "A+", "A-", "B+", "B-", "AB+", "AB-", "Other" }));
        cb_bloodGroup.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cb_bloodGroupActionPerformed(evt);
            }
        });

        cb_maritalStatus.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select", "Single", "Married", "Divorced", "Widowed" }));

        b_register.setText("Register");
        b_register.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_registerActionPerformed(evt);
            }
        });

        b_reset.setText("Reset");
        b_reset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_resetActionPerformed(evt);
            }
        });

        tf_other_gender.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tf_other_genderMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout panel_newPatientLayout = new javax.swing.GroupLayout(panel_newPatient);
        panel_newPatient.setLayout(panel_newPatientLayout);
        panel_newPatientLayout.setHorizontalGroup(
            panel_newPatientLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_newPatientLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panel_newPatientLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(panel_newPatientLayout.createSequentialGroup()
                        .addGroup(panel_newPatientLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(label_name)
                            .addComponent(label_age)
                            .addComponent(label_mobile)
                            .addComponent(label_disease)
                            .addComponent(label_address)
                            .addComponent(label_date)
                            .addComponent(label_gender)
                            .addComponent(label_bloodGroup)
                            .addComponent(label_maritalStatus))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(panel_newPatientLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panel_newPatientLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(cb_maritalStatus, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(cb_bloodGroup, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(tf_date, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(panel_newPatientLayout.createSequentialGroup()
                                    .addComponent(rb_male)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(rb_female)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(rb_other)))
                            .addComponent(tf_address, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tf_disease, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tf_mobile, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tf_age, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tf_name, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(panel_newPatientLayout.createSequentialGroup()
                        .addComponent(b_register, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(b_reset, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panel_newPatientLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(tf_other_gender, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tf_other_bloodGroup, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(859, Short.MAX_VALUE))
        );
        panel_newPatientLayout.setVerticalGroup(
            panel_newPatientLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_newPatientLayout.createSequentialGroup()
                .addGap(68, 68, 68)
                .addGroup(panel_newPatientLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(label_name)
                    .addComponent(tf_name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(panel_newPatientLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(label_age)
                    .addComponent(tf_age, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(panel_newPatientLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tf_mobile, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(label_mobile))
                .addGap(18, 18, 18)
                .addGroup(panel_newPatientLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tf_disease, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(label_disease))
                .addGap(18, 18, 18)
                .addGroup(panel_newPatientLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tf_address, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(label_address))
                .addGap(18, 18, 18)
                .addGroup(panel_newPatientLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(label_date)
                    .addComponent(tf_date, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(panel_newPatientLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(label_gender)
                    .addComponent(rb_male)
                    .addComponent(rb_female)
                    .addComponent(rb_other)
                    .addComponent(tf_other_gender, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(panel_newPatientLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(label_bloodGroup)
                    .addComponent(cb_bloodGroup, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tf_other_bloodGroup, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(panel_newPatientLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cb_maritalStatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(label_maritalStatus))
                .addGap(39, 39, 39)
                .addGroup(panel_newPatientLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(b_register)
                    .addComponent(b_reset))
                .addContainerGap(481, Short.MAX_VALUE))
        );

        tf_other_gender.setVisible(false);
        tf_other_bloodGroup.setVisible(false);

        panel_parent.add(panel_newPatient, "card3");

        label_op_name.setText("Name");

        label_op_mobile.setText("Mobile");

        b_op_search.setText("Search");
        b_op_search.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_op_searchActionPerformed(evt);
            }
        });

        label_op_patientLogin.setText("Patient Login");

        javax.swing.GroupLayout panel_oldPatientLayout = new javax.swing.GroupLayout(panel_oldPatient);
        panel_oldPatient.setLayout(panel_oldPatientLayout);
        panel_oldPatientLayout.setHorizontalGroup(
            panel_oldPatientLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_oldPatientLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panel_oldPatientLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panel_oldPatientLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panel_oldPatientLayout.createSequentialGroup()
                            .addComponent(label_op_name, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(tf_op_name, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panel_oldPatientLayout.createSequentialGroup()
                            .addComponent(label_op_mobile, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addGroup(panel_oldPatientLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(b_op_search, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(tf_op_mobile, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(panel_oldPatientLayout.createSequentialGroup()
                        .addGap(128, 128, 128)
                        .addComponent(label_op_patientLogin)))
                .addContainerGap(1221, Short.MAX_VALUE))
        );
        panel_oldPatientLayout.setVerticalGroup(
            panel_oldPatientLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_oldPatientLayout.createSequentialGroup()
                .addGap(73, 73, 73)
                .addComponent(label_op_patientLogin)
                .addGap(18, 18, 18)
                .addGroup(panel_oldPatientLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tf_op_name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(label_op_name))
                .addGap(18, 18, 18)
                .addGroup(panel_oldPatientLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(label_op_mobile)
                    .addComponent(tf_op_mobile, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(b_op_search)
                .addContainerGap(746, Short.MAX_VALUE))
        );

        panel_parent.add(panel_oldPatient, "card4");

        label_empForm_name.setText("Name");

        label_empForm_mobile.setText("Mobile");

        label_empForm_designation.setText("Designation");

        label_empForm_empID.setText("Emp ID");

        label_empForm_address.setText("Address");

        label_empForm_noOfLeaves.setText("No. of Leaves");

        label_empForm_salary.setText("Salary");

        label_empForm_totalAttendance.setText("Total Attendance");

        label_empForm_resumeFile.setText("Resume File");

        tf_empForm_name.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tf_empForm_nameActionPerformed(evt);
            }
        });

        tf_empForm_mobile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tf_empForm_mobileActionPerformed(evt);
            }
        });

        tf_empForm_designation.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tf_empForm_designationActionPerformed(evt);
            }
        });

        tf_empForm_empID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tf_empForm_empIDActionPerformed(evt);
            }
        });

        tf_empForm_address.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tf_empForm_addressActionPerformed(evt);
            }
        });

        tf_empForm_noOfLeaves.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tf_empForm_noOfLeavesActionPerformed(evt);
            }
        });

        tf_empForm_salary.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tf_empForm_salaryActionPerformed(evt);
            }
        });

        tf_empForm_totalAttendance.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tf_empForm_totalAttendanceActionPerformed(evt);
            }
        });

        b_empForm_resumeSelect.setText("Select...");
        b_empForm_resumeSelect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_empForm_resumeSelectActionPerformed(evt);
            }
        });

        b_empForm_createEmp.setText("Create Employee");
        b_empForm_createEmp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_empForm_createEmpActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panel_empFormLayout = new javax.swing.GroupLayout(panel_empForm);
        panel_empForm.setLayout(panel_empFormLayout);
        panel_empFormLayout.setHorizontalGroup(
            panel_empFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_empFormLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panel_empFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, panel_empFormLayout.createSequentialGroup()
                        .addGap(220, 220, 220)
                        .addComponent(b_empForm_createEmp, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, panel_empFormLayout.createSequentialGroup()
                        .addGroup(panel_empFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(label_empForm_name, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(label_empForm_mobile, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(label_empForm_designation, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(label_empForm_empID, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(label_empForm_address, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(label_empForm_noOfLeaves, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(label_empForm_salary, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(label_empForm_totalAttendance, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(label_empForm_resumeFile, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(123, 123, 123)
                        .addGroup(panel_empFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(label_empForm_filePath, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(panel_empFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(panel_empFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(tf_empForm_name, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(tf_empForm_mobile, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(tf_empForm_designation, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(tf_empForm_empID, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(tf_empForm_address, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(tf_empForm_noOfLeaves, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(tf_empForm_salary, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(tf_empForm_totalAttendance, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(b_empForm_resumeSelect, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(869, Short.MAX_VALUE))
        );
        panel_empFormLayout.setVerticalGroup(
            panel_empFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_empFormLayout.createSequentialGroup()
                .addGap(68, 68, 68)
                .addGroup(panel_empFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(label_empForm_name)
                    .addComponent(tf_empForm_name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(panel_empFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(label_empForm_mobile)
                    .addComponent(tf_empForm_mobile, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(panel_empFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(label_empForm_designation)
                    .addComponent(tf_empForm_designation, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(panel_empFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(label_empForm_empID)
                    .addComponent(tf_empForm_empID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(panel_empFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(label_empForm_address)
                    .addComponent(tf_empForm_address, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(panel_empFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(label_empForm_noOfLeaves)
                    .addComponent(tf_empForm_noOfLeaves, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(panel_empFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(label_empForm_salary)
                    .addComponent(tf_empForm_salary, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(panel_empFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(label_empForm_totalAttendance)
                    .addComponent(tf_empForm_totalAttendance, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(panel_empFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(label_empForm_resumeFile)
                    .addComponent(b_empForm_resumeSelect))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(label_empForm_filePath, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(b_empForm_createEmp)
                .addContainerGap(475, Short.MAX_VALUE))
        );

        panel_parent.add(panel_empForm, "card7");

        label_nameTag_userInfo.setText("Name");

        label_ageTag_userInfo.setText("Age");

        label_mobileTag_userInfo.setText("Mobile");

        label_diseaseTag_userInfo.setText("Disease");

        label_addressTag_userInfo.setText("Address");

        label_dateTag_userInfo.setText("Date (yyyy-mm-dd)");

        label_genderTag_userInfo.setText("Gender");

        label_bloodGroupTag_userInfo.setText("Blood Group");

        label_maritalStatusTag_userInfo.setText("Marital Status");

        label_nameData_userInfo.setText("Unavailable");

        label_ageData_userInfo.setText("Unavailable");

        label_mobileData_userInfo.setText("Unavailable");

        label_diseaseData_userInfo.setText("Unavailable");

        label_addressData_userInfo.setText("Unavailable");

        label_dateData_userInfo.setText("Unavailable");

        label_genderData_userInfo.setText("Unavailable");

        label_bloodGroupData_userInfo.setText("Unavailable");

        label_maritalStatusData_userInfo.setText("Unavailable");

        b_back.setText("Back");
        b_back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_backActionPerformed(evt);
            }
        });

        b_print.setText("Print");
        b_print.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_printActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panel_patientInfoLayout = new javax.swing.GroupLayout(panel_patientInfo);
        panel_patientInfo.setLayout(panel_patientInfoLayout);
        panel_patientInfoLayout.setHorizontalGroup(
            panel_patientInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_patientInfoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panel_patientInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(b_back, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(label_nameTag_userInfo)
                    .addComponent(label_ageTag_userInfo)
                    .addComponent(label_mobileTag_userInfo)
                    .addComponent(label_diseaseTag_userInfo)
                    .addComponent(label_addressTag_userInfo)
                    .addComponent(label_dateTag_userInfo)
                    .addComponent(label_genderTag_userInfo)
                    .addComponent(label_bloodGroupTag_userInfo)
                    .addComponent(label_maritalStatusTag_userInfo))
                .addGap(18, 18, 18)
                .addGroup(panel_patientInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(label_nameData_userInfo)
                    .addComponent(label_ageData_userInfo)
                    .addComponent(label_mobileData_userInfo)
                    .addComponent(label_diseaseData_userInfo)
                    .addComponent(label_addressData_userInfo)
                    .addComponent(label_dateData_userInfo)
                    .addComponent(label_genderData_userInfo)
                    .addComponent(label_bloodGroupData_userInfo)
                    .addComponent(label_maritalStatusData_userInfo)
                    .addComponent(b_print, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(1201, Short.MAX_VALUE))
        );
        panel_patientInfoLayout.setVerticalGroup(
            panel_patientInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_patientInfoLayout.createSequentialGroup()
                .addGap(72, 72, 72)
                .addGroup(panel_patientInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(panel_patientInfoLayout.createSequentialGroup()
                        .addComponent(label_nameData_userInfo)
                        .addGap(18, 18, 18)
                        .addComponent(label_ageData_userInfo)
                        .addGap(18, 18, 18)
                        .addComponent(label_mobileData_userInfo)
                        .addGap(18, 18, 18)
                        .addComponent(label_diseaseData_userInfo)
                        .addGap(18, 18, 18)
                        .addComponent(label_addressData_userInfo)
                        .addGap(18, 18, 18)
                        .addComponent(label_dateData_userInfo)
                        .addGap(18, 18, 18)
                        .addComponent(label_genderData_userInfo)
                        .addGap(18, 18, 18)
                        .addComponent(label_bloodGroupData_userInfo)
                        .addGap(18, 18, 18)
                        .addComponent(label_maritalStatusData_userInfo))
                    .addGroup(panel_patientInfoLayout.createSequentialGroup()
                        .addComponent(label_nameTag_userInfo)
                        .addGap(18, 18, 18)
                        .addComponent(label_ageTag_userInfo)
                        .addGap(18, 18, 18)
                        .addComponent(label_mobileTag_userInfo)
                        .addGap(18, 18, 18)
                        .addComponent(label_diseaseTag_userInfo)
                        .addGap(18, 18, 18)
                        .addComponent(label_addressTag_userInfo)
                        .addGap(18, 18, 18)
                        .addComponent(label_dateTag_userInfo)
                        .addGap(18, 18, 18)
                        .addComponent(label_genderTag_userInfo)
                        .addGap(18, 18, 18)
                        .addComponent(label_bloodGroupTag_userInfo)
                        .addGap(18, 18, 18)
                        .addComponent(label_maritalStatusTag_userInfo)))
                .addGap(42, 42, 42)
                .addGroup(panel_patientInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(b_back)
                    .addComponent(b_print))
                .addContainerGap(531, Short.MAX_VALUE))
        );

        panel_parent.add(panel_patientInfo, "card5");

        table_employeeTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "EmpCode", "Name", "Mobile", "Designation", "EmpID", "Address", "No of Leaves", "Salary", "Total Attendance"
            }
        ));
        table_employeeTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                table_employeeTableMouseReleased(evt);
            }
        });
        jScrollPane2.setViewportView(table_employeeTable);

        label_employeeList.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        label_employeeList.setText("EMPLOYEE LIST");

        javax.swing.GroupLayout panel_employeeListLayout = new javax.swing.GroupLayout(panel_employeeList);
        panel_employeeList.setLayout(panel_employeeListLayout);
        panel_employeeListLayout.setHorizontalGroup(
            panel_employeeListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_employeeListLayout.createSequentialGroup()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 1489, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(panel_employeeListLayout.createSequentialGroup()
                .addGap(519, 519, 519)
                .addComponent(label_employeeList)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        panel_employeeListLayout.setVerticalGroup(
            panel_employeeListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_employeeListLayout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(label_employeeList)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(457, Short.MAX_VALUE))
        );

        panel_parent.add(panel_employeeList, "card10");

        table_patientsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "PatientID", "Name", "Age", "Mobile", "Disease", "Address", "Date", "Gender", "Blood Group", "Marital Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        table_patientsTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                table_patientsTableMouseReleased(evt);
            }
        });
        jScrollPane1.setViewportView(table_patientsTable);

        label_patientsList.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        label_patientsList.setText("PATIENTS LIST");

        javax.swing.GroupLayout panel_patientsListLayout = new javax.swing.GroupLayout(panel_patientsList);
        panel_patientsList.setLayout(panel_patientsListLayout);
        panel_patientsListLayout.setHorizontalGroup(
            panel_patientsListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panel_patientsListLayout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1489, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(panel_patientsListLayout.createSequentialGroup()
                .addGap(523, 523, 523)
                .addComponent(label_patientsList)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        panel_patientsListLayout.setVerticalGroup(
            panel_patientsListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_patientsListLayout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addComponent(label_patientsList)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(456, Short.MAX_VALUE))
        );

        panel_parent.add(panel_patientsList, "card9");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panel_header, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addComponent(panel_mainMenu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panel_subMenu, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(panel_parent, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(panel_header, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(panel_mainMenu, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(panel_subMenu, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(panel_parent, javax.swing.GroupLayout.DEFAULT_SIZE, 0, Short.MAX_VALUE)))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void b_informationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_informationActionPerformed

        panel_parent.removeAll();
        panel_parent.add(panel_information);
        panel_parent.repaint();
        panel_parent.revalidate();
    }//GEN-LAST:event_b_informationActionPerformed

    private void b_adminActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_adminActionPerformed
        if (b_information.isEnabled()) {
            panel_parent.removeAll();
            panel_parent.add(panel_admin);
            panel_parent.repaint();
            panel_parent.revalidate();
        }
    }//GEN-LAST:event_b_adminActionPerformed

    private void b_newPatientActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_newPatientActionPerformed
        panel_parent.removeAll();
        panel_parent.add(panel_newPatient);
        panel_parent.repaint();
        panel_parent.revalidate();
    }//GEN-LAST:event_b_newPatientActionPerformed

    private void b_oldPatientActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_oldPatientActionPerformed
        if (b_information.isEnabled()) {
            panel_parent.removeAll();
            panel_parent.add(panel_oldPatient);
            panel_parent.repaint();
            panel_parent.revalidate();
        }
    }//GEN-LAST:event_b_oldPatientActionPerformed

    private void b_admin_loginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_admin_loginActionPerformed

        if (!tf_admin_username.getText().equals("") && !tf_admin_password.getText().equals("")) {
            try {
                String q = "SELECT * FROM admintable WHERE username = ? and password = ?";
                PreparedStatement ps = con.prepareStatement(q);
                ps.setString(1, tf_admin_username.getText());
                ps.setString(2, tf_admin_password.getText());

                ResultSet rs = ps.executeQuery();
                if (!rs.isBeforeFirst()) {
                    JOptionPane.showMessageDialog(panel_parent, "Invalid Username/Password!");
                } else {
                    tf_admin_username.setText("");
                    tf_admin_password.setText("");

                    //Submenu Refresh
                    panel_subMenu.removeAll();
                    panel_subMenu.add(panel_subMenu_admin);
                    panel_subMenu.repaint();
                    panel_subMenu.revalidate();

                    //Parent Panel Refresh
                    panel_parent.removeAll();
                    panel_parent.repaint();
                    panel_parent.revalidate();

                    //Main Menu Button Disable
                    b_information.setEnabled(false);
                    b_employee.setEnabled(false);
                    b_newPatient.setEnabled(false);
                    b_oldPatient.setEnabled(false);
                }
            } catch (Exception e) {
            }
        }
    }//GEN-LAST:event_b_admin_loginActionPerformed

    private void tf_empForm_nameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tf_empForm_nameActionPerformed

    }//GEN-LAST:event_tf_empForm_nameActionPerformed

    private void tf_empForm_mobileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tf_empForm_mobileActionPerformed

    }//GEN-LAST:event_tf_empForm_mobileActionPerformed

    private void tf_empForm_designationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tf_empForm_designationActionPerformed

    }//GEN-LAST:event_tf_empForm_designationActionPerformed

    private void tf_empForm_empIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tf_empForm_empIDActionPerformed

    }//GEN-LAST:event_tf_empForm_empIDActionPerformed

    private void tf_empForm_addressActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tf_empForm_addressActionPerformed

    }//GEN-LAST:event_tf_empForm_addressActionPerformed

    private void tf_empForm_noOfLeavesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tf_empForm_noOfLeavesActionPerformed

    }//GEN-LAST:event_tf_empForm_noOfLeavesActionPerformed

    private void tf_empForm_salaryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tf_empForm_salaryActionPerformed

    }//GEN-LAST:event_tf_empForm_salaryActionPerformed

    private void tf_empForm_totalAttendanceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tf_empForm_totalAttendanceActionPerformed

    }//GEN-LAST:event_tf_empForm_totalAttendanceActionPerformed

    private void b_empForm_createEmpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_empForm_createEmpActionPerformed
        String name = "", designation = "", empID = "", address = "";
        Long mobile = 0L, salary = 0L;
        int noOfLeaves = 0;
        int totalAttendance = 0;
        FileInputStream fin = null;

        String reqFields = "";

        if (tf_empForm_name.getText().equals("")) {
            reqFields += "Name \n";
        } else {
            name = tf_empForm_name.getText();
        }

        if (tf_empForm_mobile.getText().equals("")) {
            reqFields += "Mobile \n";
        } else {
            mobile = Long.valueOf(tf_empForm_mobile.getText());
        }

        if (tf_empForm_designation.getText().equals("")) {
            reqFields += "Designation \n";
        } else {
            designation = tf_empForm_designation.getText();
        }

        if (tf_empForm_empID.getText().equals("")) {
            reqFields += "Emp ID \n";
        } else {
            empID = tf_empForm_empID.getText();
        }

        if (tf_empForm_address.getText().equals("")) {
            reqFields += "Address \n";
        } else {
            address = tf_empForm_address.getText();
        }

        if (tf_empForm_noOfLeaves.getText().equals("")) {
            reqFields += "No of Leaves \n";
        } else {
            noOfLeaves = Integer.valueOf(tf_empForm_noOfLeaves.getText());
        }

        if (tf_empForm_salary.getText().equals("")) {
            reqFields += "Salary";
        } else {
            salary = Long.valueOf(tf_empForm_salary.getText());
        }

        if (tf_empForm_totalAttendance.getText().equals("")) {
            reqFields += "Total Attendance \n";
        } else {
            totalAttendance = Integer.valueOf(tf_empForm_totalAttendance.getText());
        }

        if (label_empForm_filePath.getText().equals("")) {
            reqFields += "Resume \n";
        } else {
            try {
                fin = new FileInputStream(label_empForm_filePath.getText());
            } catch (FileNotFoundException ex) {
                System.out.println(ex);
            }
        }

        if (!reqFields.equals("")) {
            JOptionPane.showMessageDialog(panel_parent, "The Following fields are empty: \n" + reqFields);
        } else {
            try {
                String q = "INSERT INTO employeedetails VALUES(?, ?, ?, ?, ?, ?, ?, ?, ?, ?)";
                PreparedStatement ps = con.prepareStatement(q);
                ps.setString(1, null);
                ps.setString(2, name);
                ps.setLong(3, mobile);
                ps.setString(4, designation);
                ps.setString(5, empID);
                ps.setString(6, address);
                ps.setInt(7, noOfLeaves);
                ps.setLong(8, salary);
                ps.setInt(9, totalAttendance);
                ps.setBinaryStream(10, fin, fin.available());

                int i = ps.executeUpdate();
                if (i != 0) {
                    JOptionPane.showMessageDialog(this, "Employee Added!");
                    tf_empForm_name.setText("");
                    tf_empForm_mobile.setText("");
                    tf_empForm_designation.setText("");
                    tf_empForm_empID.setText("");
                    tf_empForm_address.setText("");
                    tf_empForm_noOfLeaves.setText("");
                    tf_empForm_salary.setText("");
                    tf_empForm_totalAttendance.setText("");
                    label_empForm_filePath.setText("");;
                } else {
                    JOptionPane.showMessageDialog(this, "ERROR");
                }
            } catch (Exception e) {
                System.out.println(e);
            }
        }

    }//GEN-LAST:event_b_empForm_createEmpActionPerformed

    private void tf_nameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tf_nameActionPerformed

    }//GEN-LAST:event_tf_nameActionPerformed

    private void tf_ageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tf_ageActionPerformed

    }//GEN-LAST:event_tf_ageActionPerformed

    private void tf_dateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tf_dateActionPerformed

    }//GEN-LAST:event_tf_dateActionPerformed

    private void rb_maleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rb_maleActionPerformed
        tf_other_gender.setVisible(false);
        tf_other_gender.repaint();
        tf_other_gender.revalidate();
    }//GEN-LAST:event_rb_maleActionPerformed

    private void rb_femaleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rb_femaleActionPerformed
        tf_other_gender.setVisible(false);
        tf_other_gender.repaint();
        tf_other_gender.revalidate();
    }//GEN-LAST:event_rb_femaleActionPerformed

    private void rb_otherActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rb_otherActionPerformed
        tf_other_gender.setVisible(true);
        tf_other_gender.requestFocus();
        panel_newPatient.repaint();
        panel_newPatient.revalidate();
    }//GEN-LAST:event_rb_otherActionPerformed

    private void cb_bloodGroupActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cb_bloodGroupActionPerformed
        String chosenBloodGroup = (String) cb_bloodGroup.getSelectedItem();
        if (chosenBloodGroup.equals("Other")) {
            tf_other_bloodGroup.setVisible(true);
            tf_other_bloodGroup.requestFocus();
            panel_newPatient.repaint();
            panel_newPatient.revalidate();
        } else {
            tf_other_bloodGroup.setVisible(false);
            panel_newPatient.repaint();
            panel_newPatient.revalidate();
        }
    }//GEN-LAST:event_cb_bloodGroupActionPerformed

    private void b_registerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_registerActionPerformed
        String reqFields = "";
        String name = "", disease = "", address = "", date = "", gender = "", bloodGroup = "", maritalStatus = "";
        int age = 0;
        Long mobile = 0L;

        if (tf_name.getText().equals("")) {
            reqFields += "Name \n";
        } else {
            name = tf_name.getText();
        }

        if (tf_age.getText().equals("")) {
            reqFields += "Age \n";
        } else {
            age = Integer.valueOf(tf_age.getText());
        }

        if (tf_mobile.getText().equals("")) {
            reqFields += "Mobile \n";
        } else {
            mobile = Long.valueOf(tf_mobile.getText());
        }

        if (tf_disease.getText().equals("")) {
            reqFields += "Disease \n";
        } else {
            disease = tf_disease.getText();
        }

        if (tf_address.getText().equals("")) {
            reqFields += "Address \n";
        } else {
            address = tf_address.getText();
        }

        if (tf_date.getText().equals("")) {
            reqFields += "Date \n";
        } else {
            date = tf_date.getText();
        }

        if (buttonGroup_gender.getSelection() == null) {
            reqFields += "Gender \n";
        } else {
            if (rb_other.isSelected() && tf_other_gender.getText().equals("")) {
                reqFields += "Gender \n";
            } else {
                gender = tf_other_gender.getText();
            }

            if (rb_male.isSelected()) {
                gender = rb_male.getText();
            }

            if (rb_female.isSelected()) {
                gender = rb_female.getText();
            }
        }

        if ("Select".equals((String) cb_bloodGroup.getSelectedItem())) {
            reqFields += "Blood Group \n";
        } else {
            if ("Other".equals((String) cb_bloodGroup.getSelectedItem())) {
                if (tf_other_bloodGroup.getText().equals("")) {
                    reqFields += "Blood Group \n";
                } else {
                    bloodGroup = tf_other_bloodGroup.getText();
                }
            } else {
                bloodGroup = cb_bloodGroup.getSelectedItem().toString();
            }
        }

        if ("Select".equals((String) cb_maritalStatus.getSelectedItem())) {
            reqFields += "Marital Status \n";
        } else {
            maritalStatus = cb_maritalStatus.getSelectedItem().toString();
        }

        if (reqFields.equals("")) {
            int response = JOptionPane.showConfirmDialog(panel_parent, "Register with the given details?", "Confirm", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
            if (response == JOptionPane.YES_OPTION) {
                try {
                    PreparedStatement ps = con.prepareStatement("insert into patientstable values(?, ?, ?, ?, ?, ?, ?, ?, ?, ?)");
                    ps.setString(1, null);
                    ps.setString(2, name);
                    ps.setInt(3, age);
                    ps.setLong(4, mobile);
                    ps.setString(5, disease);
                    ps.setString(6, address);
                    ps.setString(7, date);
                    ps.setString(8, gender);
                    ps.setString(9, bloodGroup);
                    ps.setString(10, maritalStatus);

                    int i = ps.executeUpdate();
                    if (i != 0) {
                        System.out.println("Query Executed!");
                        JOptionPane.showMessageDialog(panel_parent, "Registered Succesfully!");
                        b_resetActionPerformed(evt);
                    } else {
                        System.out.println("Query Failed!");
                        JOptionPane.showMessageDialog(panel_parent, "Some Error Occurred");
                    }
                } catch (Exception e) {
                    System.out.println(e);
                }
            }
        } else {
            JOptionPane.showMessageDialog(panel_parent, "The Following fields are empty: \n" + reqFields);
        }
    }//GEN-LAST:event_b_registerActionPerformed

    private void b_resetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_resetActionPerformed
        tf_name.setText("");
        tf_age.setText("");
        tf_mobile.setText("");
        tf_disease.setText("");
        tf_address.setText("");
        tf_date.setText("");
        buttonGroup_gender.clearSelection();
        tf_other_gender.setText("");
        cb_bloodGroup.setSelectedIndex(0);
        tf_other_bloodGroup.setText("");
        tf_other_gender.setVisible(false);
        cb_maritalStatus.setSelectedIndex(0);
    }//GEN-LAST:event_b_resetActionPerformed

    private void tf_other_genderMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tf_other_genderMouseClicked

    }//GEN-LAST:event_tf_other_genderMouseClicked

    private void b_op_searchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_op_searchActionPerformed
        String loginName = tf_op_name.getText(), loginMobile = tf_op_mobile.getText();
        String name = "", age = "", mobile = "", disease = "", address = "", date = "", gender = "", bloodGroup = "", maritalStatus = "";

        if (!loginName.equals("") && !loginMobile.equals("")) {
            try {
                String q = "SELECT * FROM patientstable WHERE name = ? and mobile = ?";
                PreparedStatement ps = con.prepareStatement(q);
                ps.setString(1, loginName);
                ps.setString(2, loginMobile);

                ResultSet rs = ps.executeQuery();
                if (!rs.isBeforeFirst()) {
                    JOptionPane.showMessageDialog(panel_parent, "No Records Found!");
                } else {
                    while (rs.next()) {
                        name = rs.getString("Name");
                        age = rs.getString("Age");
                        mobile = rs.getString("Mobile");
                        disease = rs.getString("Disease");
                        address = rs.getString("Address");
                        date = rs.getString("Date");
                        gender = rs.getString("Gender");
                        bloodGroup = rs.getString("BloodGroup");
                        maritalStatus = rs.getString("MaritalStatus");
                    }

                    tf_op_name.setText("");
                    tf_op_mobile.setText("");

                    panel_parent.removeAll();
                    panel_parent.add(panel_patientInfo);
                    panel_parent.repaint();
                    panel_parent.revalidate();
                    label_nameData_userInfo.setText(name);
                    label_ageData_userInfo.setText(age);
                    label_mobileData_userInfo.setText(mobile);
                    label_diseaseData_userInfo.setText(disease);
                    label_addressData_userInfo.setText(address);
                    label_dateData_userInfo.setText(date);
                    label_genderData_userInfo.setText(gender);
                    label_bloodGroupData_userInfo.setText(bloodGroup);
                    label_maritalStatusData_userInfo.setText(maritalStatus);
                }
            } catch (Exception e) {
                System.out.println(e);
            }
        }
    }//GEN-LAST:event_b_op_searchActionPerformed

    private void b_backActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_backActionPerformed
        panel_parent.removeAll();
        panel_parent.add(panel_oldPatient);
        panel_parent.repaint();
        panel_parent.revalidate();
    }//GEN-LAST:event_b_backActionPerformed

    private void b_printActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_printActionPerformed
        PrinterJob job = PrinterJob.getPrinterJob();
        job.setJobName("Print Data");

        job.setPrintable(new Printable() {
            public int print(Graphics pg, PageFormat pf, int pageNum) {
                pf.setOrientation(PageFormat.LANDSCAPE);
                if (pageNum > 0) {
                    return Printable.NO_SUCH_PAGE;
                }

                Graphics2D g2 = (Graphics2D) pg;
                g2.translate(pf.getImageableX(), pf.getImageableY());
                g2.scale(0.24, 0.24);

                panel_patientInfo.paint(g2);
                return Printable.PAGE_EXISTS;
            }
        });

        boolean ok = job.printDialog();
        if (ok) {
            try {

                job.print();
            } catch (PrinterException ex) {
            }
        }
    }//GEN-LAST:event_b_printActionPerformed

    private void b_subMenu_admin_addEmployeeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_subMenu_admin_addEmployeeActionPerformed
        panel_parent.removeAll();
        panel_parent.add(panel_empForm);
        panel_parent.repaint();
        panel_parent.revalidate();
    }//GEN-LAST:event_b_subMenu_admin_addEmployeeActionPerformed

    private void b_subMenu_admin_addPatientActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_subMenu_admin_addPatientActionPerformed
        panel_parent.removeAll();
        panel_parent.add(panel_newPatient);
        panel_parent.repaint();
        panel_parent.revalidate();
    }//GEN-LAST:event_b_subMenu_admin_addPatientActionPerformed

    private void b_subMenu_employee_addPatientActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_subMenu_employee_addPatientActionPerformed
        panel_parent.removeAll();
        panel_parent.add(panel_newPatient);
        panel_parent.repaint();
        panel_parent.revalidate();
    }//GEN-LAST:event_b_subMenu_employee_addPatientActionPerformed

    private void b_employeeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_employeeActionPerformed
        if (b_information.isEnabled()) {
            panel_parent.removeAll();
            panel_parent.add(panel_employee);
            panel_parent.repaint();
            panel_parent.revalidate();
        }
    }//GEN-LAST:event_b_employeeActionPerformed

    private void b_emp_loginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_emp_loginActionPerformed
        String empid = tf_emp_empid.getText(), mobile = tf_emp_mobile.getText();
        if (!empid.equals("") && !mobile.equals("")) {
            try {
                String q = "SELECT * FROM employeedetails WHERE EmpID = ? and Mobile = ?";
                PreparedStatement ps = con.prepareStatement(q);
                ps.setString(1, empid);
                ps.setString(2, mobile);
                ResultSet rs = ps.executeQuery();
                if (!rs.isBeforeFirst()) {
                    JOptionPane.showMessageDialog(panel_parent, "No Records Found!");
                } else {
                    tf_emp_empid.setText("");
                    tf_emp_mobile.setText("");
                    
                    //Submenu Refresh
                    panel_subMenu.removeAll();
                    panel_subMenu.add(panel_subMenu_employee);
                    panel_subMenu.repaint();
                    panel_subMenu.revalidate();

                    //Parent Panel Refresh
                    panel_parent.removeAll();
                    panel_parent.repaint();
                    panel_parent.revalidate();

                    //Main Menu Button Disable
                    b_information.setEnabled(false);
                    b_admin.setEnabled(false);
                    b_newPatient.setEnabled(false);
                    b_oldPatient.setEnabled(false);
                }
            } catch (Exception e) {
            }
        }
    }//GEN-LAST:event_b_emp_loginActionPerformed

    private void b_subMenu_admin_logoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_subMenu_admin_logoutActionPerformed
        panel_parent.removeAll();
        panel_parent.add(panel_admin);
        panel_parent.repaint();
        panel_parent.revalidate();

        panel_subMenu.removeAll();
        panel_subMenu.repaint();
        panel_subMenu.revalidate();

        b_information.setEnabled(true);
        b_employee.setEnabled(true);
        b_newPatient.setEnabled(true);
        b_oldPatient.setEnabled(true);
    }//GEN-LAST:event_b_subMenu_admin_logoutActionPerformed

    private void b_subMenu_employee_logoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_subMenu_employee_logoutActionPerformed
        panel_parent.removeAll();
        panel_parent.add(panel_employee);
        panel_parent.repaint();
        panel_parent.revalidate();

        panel_subMenu.removeAll();
        panel_subMenu.repaint();
        panel_subMenu.revalidate();

        b_information.setEnabled(true);
        b_admin.setEnabled(true);
        b_newPatient.setEnabled(true);
        b_oldPatient.setEnabled(true);
    }//GEN-LAST:event_b_subMenu_employee_logoutActionPerformed

    private void b_empForm_resumeSelectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_empForm_resumeSelectActionPerformed
        JFileChooser jfc = new JFileChooser();
        jfc.showOpenDialog(null);
        File f = jfc.getSelectedFile();
        label_empForm_filePath.setText(f.getAbsolutePath());
    }//GEN-LAST:event_b_empForm_resumeSelectActionPerformed

    private void b_subMenu_admin_viewPatientsListActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_subMenu_admin_viewPatientsListActionPerformed
        try {
            panel_parent.removeAll();
            panel_parent.add(panel_patientsList);
            panel_parent.repaint();
            panel_parent.revalidate();

            DefaultTableModel dtm = (DefaultTableModel) table_patientsTable.getModel();
            dtm.setRowCount(0);
            table_patientsTable.revalidate();
            Object[] obj = new Object[10];

            PreparedStatement ps = con.prepareStatement("SELECT * FROM patientstable");
            ResultSet rs = ps.executeQuery();

            while (rs.next()) {
                obj[0] = rs.getString("PatientID");
                obj[1] = rs.getString("Name");
                obj[2] = rs.getString("Age");
                obj[3] = rs.getString("Mobile");
                obj[4] = rs.getString("Disease");
                obj[5] = rs.getString("Address");
                obj[6] = rs.getString("Date");
                obj[7] = rs.getString("Gender");
                obj[8] = rs.getString("BloodGroup");
                obj[9] = rs.getString("MaritalStatus");
                dtm.addRow(obj);
            }
        } catch (Exception e) {
        }
    }//GEN-LAST:event_b_subMenu_admin_viewPatientsListActionPerformed

    private void b_subMenu_admin_viewEmployeeListActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_subMenu_admin_viewEmployeeListActionPerformed
        try {
            panel_parent.removeAll();
            panel_parent.add(panel_employeeList);
            panel_parent.repaint();
            panel_parent.revalidate();

            DefaultTableModel dtm = (DefaultTableModel) table_employeeTable.getModel();
            dtm.setRowCount(0);
            table_employeeTable.revalidate();
            Object[] obj = new Object[9];

            PreparedStatement ps = con.prepareStatement("SELECT * FROM employeedetails");
            ResultSet rs = ps.executeQuery();

            while (rs.next()) {
                obj[0] = rs.getString("EmpCode");
                obj[1] = rs.getString("Name");
                obj[2] = rs.getString("Mobile");
                obj[3] = rs.getString("Designation");
                obj[4] = rs.getString("EmpID");
                obj[5] = rs.getString("Address");
                obj[6] = rs.getString("NoOfLeaves");
                obj[7] = rs.getString("Salary");
                obj[8] = rs.getString("TotalAttendance");
                dtm.addRow(obj);
            }
        } catch (Exception e) {
        }
    }//GEN-LAST:event_b_subMenu_admin_viewEmployeeListActionPerformed

    private void b_subMenu_employee_viewPatientsListActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_subMenu_employee_viewPatientsListActionPerformed
        b_subMenu_admin_viewPatientsListActionPerformed(evt);
    }//GEN-LAST:event_b_subMenu_employee_viewPatientsListActionPerformed

    private void b_admin_tempLoginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_admin_tempLoginActionPerformed
        tf_admin_username.setText("");
        tf_admin_password.setText("");

        //Submenu Refresh
        panel_subMenu.removeAll();
        panel_subMenu.add(panel_subMenu_admin);
        panel_subMenu.repaint();
        panel_subMenu.revalidate();

        //Parent Panel Refresh
        panel_parent.removeAll();
        panel_parent.repaint();
        panel_parent.revalidate();

        //Main Menu Button Disable
        b_information.setEnabled(false);
        b_employee.setEnabled(false);
        b_newPatient.setEnabled(false);
        b_oldPatient.setEnabled(false);
    }//GEN-LAST:event_b_admin_tempLoginActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        try {
            Class.forName("com.mysql.jdbc.Driver");
            con = DriverManager.getConnection("jdbc:mysql://localhost:3306/hospitaldb", "root", "");
            System.out.println("XAMPP Connected!");
        } catch (Exception e) {
            System.out.println(e);
        }
    }//GEN-LAST:event_formWindowOpened

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
        try {
            con.close();
            System.out.println("XAMPP Disconnected!");
        } catch (SQLException ex) {
            System.out.println(ex);
        }
    }//GEN-LAST:event_formWindowClosed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing

    }//GEN-LAST:event_formWindowClosing

    private void table_patientsTableMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_table_patientsTableMouseReleased
        if (evt.isPopupTrigger()) {
            popupMenu_tablePatients.show(this, evt.getX() + 430, evt.getY() + 255);
        }
    }//GEN-LAST:event_table_patientsTableMouseReleased

    private void mi_patient_deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mi_patient_deleteActionPerformed
        try {
            DefaultTableModel dtm = (DefaultTableModel) table_patientsTable.getModel();
            int selection = table_patientsTable.getSelectedRow();
            String q = "DELETE FROM patientstable WHERE PatientID = " + dtm.getValueAt(selection, 0).toString();
            PreparedStatement ps = con.prepareStatement(q);
            int i = ps.executeUpdate();
            if (i != 0) {
                dtm.removeRow(selection);
            } else {
                System.out.println("Row not deleted!");
            }

        } catch (Exception e) {
            System.out.println(e);
        }
    }//GEN-LAST:event_mi_patient_deleteActionPerformed

    private void mi_patient_editActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mi_patient_editActionPerformed
        DefaultTableModel dtm = (DefaultTableModel) table_patientsTable.getModel();
        int selection = table_patientsTable.getSelectedRow();
        try {
            System.out.println(dtm.getValueAt(selection, 1).toString());
            String q = "SELECT * FROM patientstable WHERE PatientID = " + dtm.getValueAt(selection, 0).toString();
            pID = Integer.valueOf(dtm.getValueAt(selection, 0).toString());
            PreparedStatement ps = con.prepareStatement(q);
            ResultSet rs = ps.executeQuery();
            while (rs.next()) {
                tf_edit_name.setText(rs.getString("Name"));
                tf_edit_age.setText(rs.getString("Age"));
                tf_edit_mobile.setText(rs.getString("Mobile"));
                tf_edit_disease.setText(rs.getString("Disease"));
                tf_edit_address.setText(rs.getString("Address"));
                tf_edit_date.setText(rs.getString("Date"));

                switch (rs.getString("Gender")) {
                    case "Male":
                        rb_edit_male.setSelected(true);
                        tf_edit_other_gender.setVisible(false);
                        break;
                    case "Female":
                        rb_edit_female.setSelected(true);
                        tf_edit_other_gender.setVisible(false);
                        break;
                    default:
                        rb_edit_other.setSelected(true);
                        tf_edit_other_gender.setVisible(true);
                        tf_edit_other_gender.setText(rs.getString("Gender"));
                }

                switch (rs.getString("BloodGroup")) {
                    case "O+":
                        cb_edit_bloodGroup.setSelectedIndex(1);
                        tf_edit_other_bloodGroup.setVisible(false);
                        break;
                    case "O-":
                        cb_edit_bloodGroup.setSelectedIndex(2);
                        tf_edit_other_bloodGroup.setVisible(false);
                        break;
                    case "A+":
                        cb_edit_bloodGroup.setSelectedIndex(3);
                        tf_edit_other_bloodGroup.setVisible(false);
                        break;
                    case "A-":
                        cb_edit_bloodGroup.setSelectedIndex(4);
                        tf_edit_other_bloodGroup.setVisible(false);
                        break;
                    case "B+":
                        cb_edit_bloodGroup.setSelectedIndex(5);
                        tf_edit_other_bloodGroup.setVisible(false);
                        break;
                    case "B-":
                        cb_edit_bloodGroup.setSelectedIndex(6);
                        tf_edit_other_bloodGroup.setVisible(false);
                        break;
                    case "AB+":
                        cb_edit_bloodGroup.setSelectedIndex(7);
                        tf_edit_other_bloodGroup.setVisible(false);
                        break;
                    case "AB-":
                        cb_edit_bloodGroup.setSelectedIndex(8);
                        tf_edit_other_bloodGroup.setVisible(false);
                        break;
                    default:
                        cb_edit_bloodGroup.setSelectedIndex(9);
                        tf_edit_other_bloodGroup.setVisible(true);
                        tf_edit_other_bloodGroup.setText(rs.getString("Blood Group"));
                }

                switch (rs.getString("MaritalStatus")) {
                    case "Single":
                        cb_edit_maritalStatus.setSelectedIndex(1);
                        break;
                    case "Married":
                        cb_edit_maritalStatus.setSelectedIndex(2);
                        break;
                    case "Divorced":
                        cb_edit_maritalStatus.setSelectedIndex(3);
                        break;
                    case "Widowed":
                        cb_edit_maritalStatus.setSelectedIndex(4);
                        break;
                }

                editFrame_patients.setVisible(true);
            }
        } catch (Exception e) {
            System.out.println(e);
        }

    }//GEN-LAST:event_mi_patient_editActionPerformed

    private void cb_edit_bloodGroupActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cb_edit_bloodGroupActionPerformed
        String chosenBloodGroup = (String) cb_edit_bloodGroup.getSelectedItem();
        if (chosenBloodGroup.equals("Other")) {
            tf_edit_other_bloodGroup.setVisible(true);
            tf_edit_other_bloodGroup.requestFocus();
            editFrame_patients.repaint();
            editFrame_patients.revalidate();
        } else {
            tf_edit_other_bloodGroup.setVisible(false);
            editFrame_patients.repaint();
            editFrame_patients.revalidate();
        }
    }//GEN-LAST:event_cb_edit_bloodGroupActionPerformed

    private void tf_edit_other_genderMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tf_edit_other_genderMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_tf_edit_other_genderMouseClicked

    private void rb_edit_otherActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rb_edit_otherActionPerformed
        tf_edit_other_gender.setVisible(true);
        tf_edit_other_gender.requestFocus();
        editFrame_patients.repaint();
        editFrame_patients.revalidate();
    }//GEN-LAST:event_rb_edit_otherActionPerformed

    private void rb_edit_femaleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rb_edit_femaleActionPerformed
        tf_edit_other_gender.setVisible(false);
        editFrame_patients.repaint();
        editFrame_patients.revalidate();
    }//GEN-LAST:event_rb_edit_femaleActionPerformed

    private void rb_edit_maleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rb_edit_maleActionPerformed
        tf_edit_other_gender.setVisible(false);
        editFrame_patients.repaint();
        editFrame_patients.revalidate();
    }//GEN-LAST:event_rb_edit_maleActionPerformed

    private void tf_edit_dateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tf_edit_dateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tf_edit_dateActionPerformed

    private void tf_edit_ageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tf_edit_ageActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tf_edit_ageActionPerformed

    private void tf_edit_nameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tf_edit_nameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tf_edit_nameActionPerformed

    private void b_updatePatientActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_updatePatientActionPerformed
        String reqFields = "";
        String name = "", disease = "", address = "", date = "", gender = "", bloodGroup = "", maritalStatus = "";
        int age = 0;
        Long mobile = 0L;

        if (tf_edit_name.getText().equals("")) {
            reqFields += "Name \n";
        } else {
            name = tf_edit_name.getText();
        }

        if (tf_edit_age.getText().equals("")) {
            reqFields += "Age \n";
        } else {
            age = Integer.valueOf(tf_edit_age.getText());
        }

        if (tf_edit_mobile.getText().equals("")) {
            reqFields += "Mobile \n";
        } else {
            mobile = Long.valueOf(tf_edit_mobile.getText());
        }

        if (tf_edit_disease.getText().equals("")) {
            reqFields += "Disease \n";
        } else {
            disease = tf_edit_disease.getText();
        }

        if (tf_edit_address.getText().equals("")) {
            reqFields += "Address \n";
        } else {
            address = tf_edit_address.getText();
        }

        if (tf_edit_date.getText().equals("")) {
            reqFields += "Date \n";
        } else {
            date = tf_edit_date.getText();
        }

        if (buttonGroup_edit_gender.getSelection() == null) {
            reqFields += "Gender \n";
        } else {
            if (rb_edit_other.isSelected() && tf_edit_other_gender.getText().equals("")) {
                reqFields += "Gender \n";
            } else {
                gender = tf_edit_other_gender.getText();
            }

            if (rb_edit_male.isSelected()) {
                gender = rb_edit_male.getText();
            }

            if (rb_edit_female.isSelected()) {
                gender = rb_edit_female.getText();
            }
        }

        if ("Select".equals((String) cb_edit_bloodGroup.getSelectedItem())) {
            reqFields += "Blood Group \n";
        } else {
            if ("Other".equals((String) cb_edit_bloodGroup.getSelectedItem())) {
                if (tf_edit_other_bloodGroup.getText().equals("")) {
                    reqFields += "Blood Group \n";
                } else {
                    bloodGroup = tf_edit_other_bloodGroup.getText();
                }
            } else {
                bloodGroup = cb_edit_bloodGroup.getSelectedItem().toString();
            }
        }

        if ("Select".equals((String) cb_edit_maritalStatus.getSelectedItem())) {
            reqFields += "Marital Status \n";
        } else {
            maritalStatus = cb_edit_maritalStatus.getSelectedItem().toString();
        }
        
        try {
            String q = "UPDATE patientstable SET Name = ?, Age = ?, Mobile = ?, Disease = ?, Address = ?, Date = ?, Gender = ?, BloodGroup = ?, MaritalStatus = ? WHERE PatientID = " + pID;
            PreparedStatement ps = con.prepareStatement(q);
            ps.setString(1, name);
            ps.setInt(2, age);
            ps.setLong(3, mobile);
            ps.setString(4, disease);
            ps.setString(5, address);
            ps.setString(6, date);
            ps.setString(7, gender);
            ps.setString(8, bloodGroup);
            ps.setString(9, maritalStatus);
            int i = ps.executeUpdate();
            if (i == 0) 
                JOptionPane.showMessageDialog(this, "ERROR");            
            else{
                JOptionPane.showMessageDialog(this, "Values Updated!");
                b_subMenu_admin_viewPatientsListActionPerformed(evt);
                editFrame_patients.dispose();                
            }
            
        } 
        catch (Exception e) {
            System.out.println(e);
        }
    }//GEN-LAST:event_b_updatePatientActionPerformed

    private void b_cancelPatientActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_cancelPatientActionPerformed
        editFrame_patients.dispose();
    }//GEN-LAST:event_b_cancelPatientActionPerformed

    private void tf_edit_empForm_nameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tf_edit_empForm_nameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tf_edit_empForm_nameActionPerformed

    private void tf_edit_empForm_mobileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tf_edit_empForm_mobileActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tf_edit_empForm_mobileActionPerformed

    private void tf_edit_empForm_designationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tf_edit_empForm_designationActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tf_edit_empForm_designationActionPerformed

    private void tf_edit_empForm_empIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tf_edit_empForm_empIDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tf_edit_empForm_empIDActionPerformed

    private void tf_edit_empForm_addressActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tf_edit_empForm_addressActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tf_edit_empForm_addressActionPerformed

    private void tf_edit_empForm_noOfLeavesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tf_edit_empForm_noOfLeavesActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tf_edit_empForm_noOfLeavesActionPerformed

    private void tf_edit_empForm_salaryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tf_edit_empForm_salaryActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tf_edit_empForm_salaryActionPerformed

    private void tf_edit_empForm_totalAttendanceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tf_edit_empForm_totalAttendanceActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tf_edit_empForm_totalAttendanceActionPerformed

    private void b_edit_empForm_resumeSelectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_edit_empForm_resumeSelectActionPerformed
        JFileChooser jfc = new JFileChooser();
        jfc.showOpenDialog(null);
        File f = jfc.getSelectedFile();
        label_edit_empForm_filePath.setText(f.getAbsolutePath());
    }//GEN-LAST:event_b_edit_empForm_resumeSelectActionPerformed

    private void b_updatePatient1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_updatePatient1ActionPerformed
        String reqFields = "";
        String name = "", designation = "", empID = "", address = "";
        Long mobile = 0L, salary = 0L;
        int noOfLeaves = 0, totalAttendance = 0;

        if (tf_edit_empForm_name.getText().equals("")) {
            reqFields += "Name \n";
        } else {
            name = tf_edit_empForm_name.getText();
        }

        if (tf_edit_empForm_mobile.getText().equals("")) {
            reqFields += "Mobile \n";
        } else {
            mobile = Long.valueOf(tf_edit_empForm_mobile.getText());
        }

        if (tf_edit_empForm_designation.getText().equals("")) {
            reqFields += "Designation \n";
        } else {
            designation = tf_edit_empForm_designation.getText();
        }

        if (tf_edit_empForm_empID.getText().equals("")) {
            reqFields += "EmpID \n";
        } else {
            empID = tf_edit_empForm_empID.getText();
        }

        if (tf_edit_empForm_address.getText().equals("")) {
            reqFields += "Address \n";
        } else {
            address = tf_edit_empForm_address.getText();
        }

        if (tf_edit_empForm_noOfLeaves.getText().equals("")) {
            reqFields += "No of Leaves \n";
        } else {
            noOfLeaves = Integer.valueOf(tf_edit_empForm_noOfLeaves.getText());
        }

        if (tf_edit_empForm_salary.getText().equals("")) {
            reqFields += "Salary \n";
        } else {
            salary = Long.valueOf(tf_edit_empForm_salary.getText());
        }

        if (tf_edit_empForm_totalAttendance.getText().equals("")) {
            reqFields += "Total Attendance \n";
        } else {
            totalAttendance = Integer.valueOf(tf_edit_empForm_totalAttendance.getText());
        }

        if (reqFields.equals("")) {
            try {
                String q = "UPDATE employeedetails SET Name = ?, Mobile = ?, Designation = ?, EmpId = ?, Address = ?, NoOfLeaves = ?, Salary = ?, TotalAttendance = ? WHERE EmpCode = " + empCode;
                PreparedStatement ps = con.prepareStatement(q);
                ps.setString(1, name);
                ps.setLong(2, mobile);
                ps.setString(3, designation);
                ps.setString(4, empID);
                ps.setString(5, address);
                ps.setInt(6, noOfLeaves);
                ps.setLong(7, salary);
                ps.setInt(8, totalAttendance);
                int i = ps.executeUpdate();
                if (i == 0) {
                    JOptionPane.showMessageDialog(this, "ERROR");
                } else {
                    JOptionPane.showMessageDialog(this, "Values Updated!");
                    b_subMenu_admin_viewEmployeeListActionPerformed(evt);
                    editFrame_employees.dispose();
                }
            } catch (Exception e) {
                System.out.println(e);
            }

        } else {
            JOptionPane.showMessageDialog(panel_parent, "The Following fields are empty: \n" + reqFields);
        }

    }//GEN-LAST:event_b_updatePatient1ActionPerformed

    private void b_cancelPatient1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_cancelPatient1ActionPerformed
        editFrame_employees.dispose();
    }//GEN-LAST:event_b_cancelPatient1ActionPerformed

    private void table_employeeTableMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_table_employeeTableMouseReleased
        if (evt.isPopupTrigger()) {
            popupMenu_tableEmployees.show(this, evt.getX() + 430, evt.getY() + 255);
        }
    }//GEN-LAST:event_table_employeeTableMouseReleased

    private void mi_emp_deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mi_emp_deleteActionPerformed
        try {
            DefaultTableModel dtm = (DefaultTableModel) table_employeeTable.getModel();
            int selection = table_employeeTable.getSelectedRow();
            String q = "DELETE FROM employeedetails WHERE EmpCode = " + dtm.getValueAt(selection, 0).toString();
            PreparedStatement ps = con.prepareStatement(q);
            int i = ps.executeUpdate();
            if (i != 0) {
                dtm.removeRow(selection);
            } else {
                System.out.println("Row not deleted!");
            }

        } catch (Exception e) {
            System.out.println(e);
        }
    }//GEN-LAST:event_mi_emp_deleteActionPerformed

    private void mi_emp_editActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mi_emp_editActionPerformed
        DefaultTableModel dtm = (DefaultTableModel) table_employeeTable.getModel();
        int selection = table_employeeTable.getSelectedRow();
        try {
            String q = "SELECT * FROM employeedetails WHERE EmpCode = " + dtm.getValueAt(selection, 0).toString();
            empCode = Integer.valueOf(dtm.getValueAt(selection, 0).toString());
            PreparedStatement ps = con.prepareStatement(q);
            ResultSet rs = ps.executeQuery();
            while (rs.next()) {
                tf_edit_empForm_name.setText(rs.getString("Name"));
                tf_edit_empForm_mobile.setText(rs.getString("Mobile"));
                tf_edit_empForm_designation.setText(rs.getString("Designation"));
                tf_edit_empForm_empID.setText(rs.getString("EmpID"));
                tf_edit_empForm_address.setText(rs.getString("Address"));
                tf_edit_empForm_noOfLeaves.setText(rs.getString("NoOfLeaves"));
                tf_edit_empForm_salary.setText(rs.getString("Salary"));
                tf_edit_empForm_totalAttendance.setText(rs.getString("TotalAttendance"));
            }
            editFrame_employees.setVisible(true);
        } catch (Exception e) {
            System.out.println(e);
        }
    }//GEN-LAST:event_mi_emp_editActionPerformed

    private void b_emp_tempLoginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_emp_tempLoginActionPerformed
        tf_emp_empid.setText("");
        tf_emp_mobile.setText("");

        //Submenu Refresh
        panel_subMenu.removeAll();
        panel_subMenu.add(panel_subMenu_employee);
        panel_subMenu.repaint();
        panel_subMenu.revalidate();

        //Parent Panel Refresh
        panel_parent.removeAll();
        panel_parent.repaint();
        panel_parent.revalidate();

        //Main Menu Button Disable
        b_information.setEnabled(false);
        b_admin.setEnabled(false);
        b_newPatient.setEnabled(false);
        b_oldPatient.setEnabled(false);
    }//GEN-LAST:event_b_emp_tempLoginActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(WelcomeFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(WelcomeFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(WelcomeFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(WelcomeFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new WelcomeFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton b_admin;
    private javax.swing.JButton b_admin_login;
    private javax.swing.JButton b_admin_tempLogin;
    private javax.swing.JButton b_back;
    private javax.swing.JButton b_cancelPatient;
    private javax.swing.JButton b_cancelPatient1;
    private javax.swing.JButton b_edit_empForm_resumeSelect;
    private javax.swing.JButton b_empForm_createEmp;
    private javax.swing.JButton b_empForm_resumeSelect;
    private javax.swing.JButton b_emp_login;
    private javax.swing.JButton b_emp_tempLogin;
    private javax.swing.JButton b_employee;
    private javax.swing.JButton b_information;
    private javax.swing.JButton b_newPatient;
    private javax.swing.JButton b_oldPatient;
    private javax.swing.JButton b_op_search;
    private javax.swing.JButton b_print;
    private javax.swing.JButton b_register;
    private javax.swing.JButton b_reset;
    private javax.swing.JButton b_subMenu_admin_addEmployee;
    private javax.swing.JButton b_subMenu_admin_addPatient;
    private javax.swing.JButton b_subMenu_admin_logout;
    private javax.swing.JButton b_subMenu_admin_viewEmployeeList;
    private javax.swing.JButton b_subMenu_admin_viewPatientsList;
    private javax.swing.JButton b_subMenu_employee_addPatient;
    private javax.swing.JButton b_subMenu_employee_logout;
    private javax.swing.JButton b_subMenu_employee_viewPatientsList;
    private javax.swing.JButton b_updatePatient;
    private javax.swing.JButton b_updatePatient1;
    private javax.swing.ButtonGroup buttonGroup_edit_gender;
    private javax.swing.ButtonGroup buttonGroup_gender;
    private javax.swing.JComboBox<String> cb_bloodGroup;
    private javax.swing.JComboBox<String> cb_edit_bloodGroup;
    private javax.swing.JComboBox<String> cb_edit_maritalStatus;
    private javax.swing.JComboBox<String> cb_maritalStatus;
    private javax.swing.JFrame editFrame_employees;
    private javax.swing.JFrame editFrame_patients;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel label_address;
    private javax.swing.JLabel label_addressData_userInfo;
    private javax.swing.JLabel label_addressTag_userInfo;
    private javax.swing.JLabel label_admin_adminLogin;
    private javax.swing.JLabel label_admin_password;
    private javax.swing.JLabel label_admin_username;
    private javax.swing.JLabel label_age;
    private javax.swing.JLabel label_ageData_userInfo;
    private javax.swing.JLabel label_ageTag_userInfo;
    private javax.swing.JLabel label_bloodGroup;
    private javax.swing.JLabel label_bloodGroupData_userInfo;
    private javax.swing.JLabel label_bloodGroupTag_userInfo;
    private javax.swing.JLabel label_date;
    private javax.swing.JLabel label_dateData_userInfo;
    private javax.swing.JLabel label_dateTag_userInfo;
    private javax.swing.JLabel label_disease;
    private javax.swing.JLabel label_diseaseData_userInfo;
    private javax.swing.JLabel label_diseaseTag_userInfo;
    private javax.swing.JLabel label_edit_address;
    private javax.swing.JLabel label_edit_age;
    private javax.swing.JLabel label_edit_bloodGroup;
    private javax.swing.JLabel label_edit_date;
    private javax.swing.JLabel label_edit_disease;
    private javax.swing.JLabel label_edit_empForm_address;
    private javax.swing.JLabel label_edit_empForm_designation;
    private javax.swing.JLabel label_edit_empForm_empID;
    private javax.swing.JLabel label_edit_empForm_filePath;
    private javax.swing.JLabel label_edit_empForm_mobile;
    private javax.swing.JLabel label_edit_empForm_name;
    private javax.swing.JLabel label_edit_empForm_noOfLeaves;
    private javax.swing.JLabel label_edit_empForm_resumeFile;
    private javax.swing.JLabel label_edit_empForm_salary;
    private javax.swing.JLabel label_edit_empForm_totalAttendance;
    private javax.swing.JLabel label_edit_gender;
    private javax.swing.JLabel label_edit_maritalStatus;
    private javax.swing.JLabel label_edit_mobile;
    private javax.swing.JLabel label_edit_name;
    private javax.swing.JLabel label_empForm_address;
    private javax.swing.JLabel label_empForm_designation;
    private javax.swing.JLabel label_empForm_empID;
    private javax.swing.JLabel label_empForm_filePath;
    private javax.swing.JLabel label_empForm_mobile;
    private javax.swing.JLabel label_empForm_name;
    private javax.swing.JLabel label_empForm_noOfLeaves;
    private javax.swing.JLabel label_empForm_resumeFile;
    private javax.swing.JLabel label_empForm_salary;
    private javax.swing.JLabel label_empForm_totalAttendance;
    private javax.swing.JLabel label_emp_empLogin;
    private javax.swing.JLabel label_emp_empid;
    private javax.swing.JLabel label_emp_mobile;
    private javax.swing.JLabel label_employeeList;
    private javax.swing.JLabel label_gender;
    private javax.swing.JLabel label_genderData_userInfo;
    private javax.swing.JLabel label_genderTag_userInfo;
    private javax.swing.JLabel label_info_address;
    private javax.swing.JLabel label_info_addressTitle;
    private javax.swing.JLabel label_info_bannerImage;
    private javax.swing.JLabel label_info_fax;
    private javax.swing.JLabel label_info_fax1;
    private javax.swing.JLabel label_info_fax2;
    private javax.swing.JLabel label_info_faxTitle;
    private javax.swing.JLabel label_info_faxTitle1;
    private javax.swing.JLabel label_info_faxTitle2;
    private javax.swing.JLabel label_info_faxTitle3;
    private javax.swing.JLabel label_info_faxTitle4;
    private javax.swing.JLabel label_info_phone;
    private javax.swing.JLabel label_info_phoneTitle;
    private javax.swing.JLabel label_maritalStatus;
    private javax.swing.JLabel label_maritalStatusData_userInfo;
    private javax.swing.JLabel label_maritalStatusTag_userInfo;
    private javax.swing.JLabel label_mobile;
    private javax.swing.JLabel label_mobileData_userInfo;
    private javax.swing.JLabel label_mobileTag_userInfo;
    private javax.swing.JLabel label_name;
    private javax.swing.JLabel label_nameData_userInfo;
    private javax.swing.JLabel label_nameTag_userInfo;
    private javax.swing.JLabel label_op_mobile;
    private javax.swing.JLabel label_op_name;
    private javax.swing.JLabel label_op_patientLogin;
    private javax.swing.JLabel label_patientsList;
    private javax.swing.JLabel label_title;
    private javax.swing.JMenuItem mi_emp_delete;
    private javax.swing.JMenuItem mi_emp_edit;
    private javax.swing.JMenuItem mi_patient_delete;
    private javax.swing.JMenuItem mi_patient_edit;
    private javax.swing.JPanel panel_admin;
    private javax.swing.JPanel panel_empForm;
    private javax.swing.JPanel panel_employee;
    private javax.swing.JPanel panel_employeeList;
    private javax.swing.JPanel panel_header;
    private javax.swing.JPanel panel_information;
    private javax.swing.JPanel panel_mainMenu;
    private javax.swing.JPanel panel_newPatient;
    private javax.swing.JPanel panel_oldPatient;
    private javax.swing.JPanel panel_parent;
    private javax.swing.JPanel panel_patientInfo;
    private javax.swing.JPanel panel_patientsList;
    private javax.swing.JPanel panel_subMenu;
    private javax.swing.JPanel panel_subMenu_admin;
    private javax.swing.JPanel panel_subMenu_blank;
    private javax.swing.JPanel panel_subMenu_employee;
    private javax.swing.JPopupMenu popupMenu_tableEmployees;
    private javax.swing.JPopupMenu popupMenu_tablePatients;
    private javax.swing.JRadioButton rb_edit_female;
    private javax.swing.JRadioButton rb_edit_male;
    private javax.swing.JRadioButton rb_edit_other;
    private javax.swing.JRadioButton rb_female;
    private javax.swing.JRadioButton rb_male;
    private javax.swing.JRadioButton rb_other;
    private javax.swing.JTable table_employeeTable;
    private javax.swing.JTable table_patientsTable;
    private javax.swing.JTextField tf_address;
    private javax.swing.JPasswordField tf_admin_password;
    private javax.swing.JTextField tf_admin_username;
    private javax.swing.JTextField tf_age;
    private javax.swing.JTextField tf_date;
    private javax.swing.JTextField tf_disease;
    private javax.swing.JTextField tf_edit_address;
    private javax.swing.JTextField tf_edit_age;
    private javax.swing.JTextField tf_edit_date;
    private javax.swing.JTextField tf_edit_disease;
    private javax.swing.JTextField tf_edit_empForm_address;
    private javax.swing.JTextField tf_edit_empForm_designation;
    private javax.swing.JTextField tf_edit_empForm_empID;
    private javax.swing.JTextField tf_edit_empForm_mobile;
    private javax.swing.JTextField tf_edit_empForm_name;
    private javax.swing.JTextField tf_edit_empForm_noOfLeaves;
    private javax.swing.JTextField tf_edit_empForm_salary;
    private javax.swing.JTextField tf_edit_empForm_totalAttendance;
    private javax.swing.JTextField tf_edit_mobile;
    private javax.swing.JTextField tf_edit_name;
    private javax.swing.JTextField tf_edit_other_bloodGroup;
    private javax.swing.JTextField tf_edit_other_gender;
    private javax.swing.JTextField tf_empForm_address;
    private javax.swing.JTextField tf_empForm_designation;
    private javax.swing.JTextField tf_empForm_empID;
    private javax.swing.JTextField tf_empForm_mobile;
    private javax.swing.JTextField tf_empForm_name;
    private javax.swing.JTextField tf_empForm_noOfLeaves;
    private javax.swing.JTextField tf_empForm_salary;
    private javax.swing.JTextField tf_empForm_totalAttendance;
    private javax.swing.JTextField tf_emp_empid;
    private javax.swing.JTextField tf_emp_mobile;
    private javax.swing.JTextField tf_mobile;
    private javax.swing.JTextField tf_name;
    private javax.swing.JTextField tf_op_mobile;
    private javax.swing.JTextField tf_op_name;
    private javax.swing.JTextField tf_other_bloodGroup;
    private javax.swing.JTextField tf_other_gender;
    // End of variables declaration//GEN-END:variables
}
